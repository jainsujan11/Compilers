Terminals unused in grammar

    STRUCT
    TYPEDEF
    UNION
    INVALID_TOKEN
    HASH


Grammar

    0 $accept: translation_unit $end

    1 M: ε

    2 N: ε

    3 X: ε

    4 blocktable: ε

    5 changetable: ε

    6 primary_expression: IDENTIFIER
    7                   | CONSTANT_INT
    8                   | CONSTANT_FLOAT
    9                   | CONSTANT_CHAR
   10                   | LITERAL
   11                   | LP expression RP

   12 postfix_expression: primary_expression
   13                   | postfix_expression SQ_BRACKET_L expression SQ_BRACKET_R
   14                   | postfix_expression LP argument_expression_list_opt RP
   15                   | postfix_expression PERIOD IDENTIFIER
   16                   | postfix_expression ARROW IDENTIFIER
   17                   | postfix_expression INCREMENT
   18                   | postfix_expression DECREMENT
   19                   | LP type_name RP CURLY_BRACKET_L initializer_list CURLY_BRACKET_R
   20                   | LP type_name RP CURLY_BRACKET_L initializer_list COMMA CURLY_BRACKET_R

   21 argument_expression_list_opt: argument_expression_list
   22                             | ε

   23 argument_expression_list: assignment_expression
   24                         | argument_expression_list COMMA assignment_expression

   25 unary_expression: postfix_expression
   26                 | INCREMENT unary_expression
   27                 | DECREMENT unary_expression
   28                 | unary_operator cast_expression
   29                 | SIZEOF unary_expression
   30                 | SIZEOF LP type_name RP

   31 unary_operator: AMPERSAND
   32               | ASTERISK
   33               | PLUS
   34               | MINUS
   35               | TILDE
   36               | EXCLAMATION

   37 cast_expression: unary_expression
   38                | LP type_name RP cast_expression

   39 multiplicative_expression: cast_expression
   40                          | multiplicative_expression ASTERISK cast_expression
   41                          | multiplicative_expression SLASH cast_expression
   42                          | multiplicative_expression PERCENT cast_expression

   43 additive_expression: multiplicative_expression
   44                    | additive_expression PLUS multiplicative_expression
   45                    | additive_expression MINUS multiplicative_expression

   46 shift_expression: additive_expression
   47                 | shift_expression LEFT_SHIFT additive_expression
   48                 | shift_expression RIGHT_SHIFT additive_expression

   49 relational_expression: shift_expression
   50                      | relational_expression LESS_THAN shift_expression
   51                      | relational_expression GREATER_THAN shift_expression
   52                      | relational_expression LESS_THAN_EQUAL shift_expression
   53                      | relational_expression GREATER_THAN_EQUAL shift_expression

   54 equality_expression: relational_expression
   55                    | equality_expression EQUAL relational_expression
   56                    | equality_expression NOT_EQUAL relational_expression

   57 and_expression: equality_expression
   58               | and_expression AMPERSAND equality_expression

   59 exclusive_or_expression: and_expression
   60                        | exclusive_or_expression CARET and_expression

   61 inclusive_or_expression: exclusive_or_expression
   62                        | inclusive_or_expression PIPE exclusive_or_expression

   63 logical_and_expression: inclusive_or_expression
   64                       | logical_and_expression LOGICAL_AND M inclusive_or_expression

   65 logical_or_expression: logical_and_expression
   66                      | logical_or_expression LOGICAL_OR M logical_and_expression

   67 conditional_expression: logical_or_expression
   68                       | logical_or_expression N QUESTION M expression N COLON M conditional_expression

   69 assignment_expression: conditional_expression
   70                      | unary_expression assignment_operator assignment_expression

   71 assignment_operator: ASSIGN
   72                    | MUL_ASSIGN
   73                    | DIV_ASSIGN
   74                    | MOD_ASSIGN
   75                    | ADD_ASSIGN
   76                    | MINUS_ASSIGN
   77                    | LEFT_SHIFT_ASSIGN
   78                    | RIGHT_SHIFT_ASSIGN
   79                    | AND_ASSIGN
   80                    | XOR_ASSIGN
   81                    | OR_ASSIGN

   82 expression: assignment_expression
   83           | expression COMMA assignment_expression

   84 constant_expression: conditional_expression

   85 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON

   86 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   87                       | type_specifier declaration_specifiers_opt
   88                       | type_qualifier declaration_specifiers_opt
   89                       | function_specifier declaration_specifiers_opt

   90 declaration_specifiers_opt: ε
   91                           | declaration_specifiers

   92 init_declarator_list: init_declarator
   93                     | init_declarator_list COMMA init_declarator

   94 init_declarator_list_opt: ε
   95                         | init_declarator_list

   96 init_declarator: declarator
   97                | declarator ASSIGN initializer

   98 storage_class_specifier: EXTERN
   99                        | STATIC
  100                        | AUTO
  101                        | REGISTER

  102 type_specifier: VOID
  103               | CHAR
  104               | INT
  105               | FLOAT
  106               | LONG
  107               | SHORT
  108               | DOUBLE
  109               | SIGNED
  110               | UNSIGNED
  111               | BOOL
  112               | COMPLEX
  113               | IMAGINARY

  114 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  115                         | type_qualifier specifier_qualifier_list_opt

  116 specifier_qualifier_list_opt: ε
  117                             | specifier_qualifier_list

  118 type_qualifier: CONST
  119               | RESTRICT
  120               | VOLATILE

  121 function_specifier: INLINE

  122 declarator: pointer direct_declarator
  123           | direct_declarator

  124 direct_declarator: IDENTIFIER
  125                  | LP declarator RP
  126                  | direct_declarator SQ_BRACKET_L type_qualifier_list assignment_expression SQ_BRACKET_R
  127                  | direct_declarator SQ_BRACKET_L type_qualifier_list SQ_BRACKET_R
  128                  | direct_declarator SQ_BRACKET_L assignment_expression SQ_BRACKET_R
  129                  | direct_declarator SQ_BRACKET_L SQ_BRACKET_R
  130                  | direct_declarator SQ_BRACKET_L STATIC type_qualifier_list assignment_expression SQ_BRACKET_R
  131                  | direct_declarator SQ_BRACKET_L STATIC assignment_expression SQ_BRACKET_R
  132                  | direct_declarator SQ_BRACKET_L type_qualifier_list ASTERISK SQ_BRACKET_R
  133                  | direct_declarator SQ_BRACKET_L ASTERISK SQ_BRACKET_R
  134                  | direct_declarator LP changetable parameter_type_list RP
  135                  | direct_declarator LP changetable RP
  136                  | direct_declarator LP identifier_list RP

  137 pointer: ASTERISK type_qualifier_list_opt
  138        | ASTERISK type_qualifier_list_opt pointer

  139 type_qualifier_list: type_qualifier
  140                    | type_qualifier_list type_qualifier

  141 type_qualifier_list_opt: ε
  142                        | type_qualifier_list

  143 parameter_type_list: parameter_list
  144                    | parameter_list COMMA ELLIPSIS

  145 parameter_list: parameter_declaration
  146               | parameter_list COMMA parameter_declaration

  147 parameter_declaration: declaration_specifiers declarator
  148                      | declaration_specifiers

  149 identifier_list: IDENTIFIER
  150                | identifier_list COMMA IDENTIFIER

  151 type_name: specifier_qualifier_list

  152 initializer: assignment_expression
  153            | CURLY_BRACKET_L initializer_list CURLY_BRACKET_R
  154            | CURLY_BRACKET_L initializer_list COMMA CURLY_BRACKET_R

  155 initializer_list: designation_opt initializer
  156                 | initializer_list COMMA designation_opt initializer

  157 designation: designator_list ASSIGN

  158 designation_opt: ε
  159                | designation

  160 designator_list: designator
  161                | designator_list designator

  162 designator: SQ_BRACKET_L constant_expression SQ_BRACKET_R
  163           | PERIOD IDENTIFIER

  164 statement: labeled_statement
  165          | compound_statement
  166          | expression_statement
  167          | selection_statement
  168          | iteration_statement
  169          | jump_statement

  170 labeled_statement: IDENTIFIER COLON M statement
  171                  | CASE constant_expression COLON statement
  172                  | DEFAULT COLON statement

  173 compound_statement: CURLY_BRACKET_L X blocktable block_item_list_opt CURLY_BRACKET_R

  174 block_item_list: block_item
  175                | block_item_list M block_item

  176 block_item_list_opt: ε
  177                    | block_item_list

  178 block_item: declaration
  179           | statement

  180 expression_statement: expression SEMICOLON
  181                     | SEMICOLON

  182 selection_statement: IF LP expression RP M statement N
  183                    | IF LP expression RP M statement N ELSE M statement
  184                    | SWITCH LP expression RP statement

  185 iteration_statement: WHILE LP X blocktable M expression RP M statement
  186                    | DO M statement M WHILE LP expression RP SEMICOLON
  187                    | FOR LP X blocktable expression_statement M expression_statement M expression N RP M statement
  188                    | FOR LP X blocktable declaration M expression_statement M expression N RP M statement
  189                    | FOR LP X blocktable declaration M expression_statement M expression_statement M expression N RP M statement

  190 jump_statement: GOTO IDENTIFIER SEMICOLON
  191               | CONTINUE SEMICOLON
  192               | BREAK SEMICOLON
  193               | RETURN expression SEMICOLON
  194               | RETURN SEMICOLON

  195 translation_unit: external_declaration
  196                 | translation_unit external_declaration

  197 external_declaration: function_definition
  198                     | declaration

  199 function_definition: declaration_specifiers declarator declaration_list_opt changetable compound_statement

  200 declaration_list: declaration
  201                 | declaration_list declaration

  202 declaration_list_opt: ε
  203                     | declaration_list


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AUTO (258) 100
    RESTRICT (259) 119
    UNSIGNED (260) 110
    BREAK (261) 192
    EXTERN (262) 98
    RETURN (263) 193 194
    VOID (264) 102
    CASE (265) 171
    FLOAT (266) 105
    SHORT (267) 107
    VOLATILE (268) 120
    CHAR (269) 103
    FOR (270) 187 188 189
    SIGNED (271) 109
    WHILE (272) 185 186
    CONST (273) 118
    GOTO (274) 190
    SIZEOF (275) 29 30
    BOOL (276) 111
    CONTINUE (277) 191
    IF (278) 182 183
    STATIC (279) 99 130 131
    COMPLEX (280) 112
    DEFAULT (281) 172
    INLINE (282) 121
    STRUCT (283)
    IMAGINARY (284) 113
    DO (285) 186
    INT (286) 104
    SWITCH (287) 184
    DOUBLE (288) 108
    LONG (289) 106
    TYPEDEF (290)
    ELSE (291) 183
    REGISTER (292) 101
    UNION (293)
    INVALID_TOKEN (294)
    LP (295) 11 14 19 20 30 38 125 134 135 136 182 183 184 185 186 187 188 189
    RP (296) 11 14 19 20 30 38 125 134 135 136 182 183 184 185 186 187 188 189
    SQ_BRACKET_L (297) 13 126 127 128 129 130 131 132 133 162
    SQ_BRACKET_R (298) 13 126 127 128 129 130 131 132 133 162
    CURLY_BRACKET_L (299) 19 20 153 154 173
    CURLY_BRACKET_R (300) 19 20 153 154 173
    PERIOD (301) 15 163
    ARROW (302) 16
    INCREMENT (303) 17 26
    DECREMENT (304) 18 27
    AMPERSAND (305) 31 58
    ASTERISK (306) 32 40 132 133 137 138
    PLUS (307) 33 44
    MINUS (308) 34 45
    TILDE (309) 35
    EXCLAMATION (310) 36
    SLASH (311) 41
    PERCENT (312) 42
    LEFT_SHIFT (313) 47
    RIGHT_SHIFT (314) 48
    LESS_THAN (315) 50
    GREATER_THAN (316) 51
    LESS_THAN_EQUAL (317) 52
    GREATER_THAN_EQUAL (318) 53
    EQUAL (319) 55
    NOT_EQUAL (320) 56
    CARET (321) 60
    PIPE (322) 62
    LOGICAL_AND (323) 64
    LOGICAL_OR (324) 66
    QUESTION (325) 68
    COLON (326) 68 170 171 172
    SEMICOLON (327) 85 180 181 186 190 191 192 193 194
    ELLIPSIS (328) 144
    ASSIGN (329) 71 97 157
    MUL_ASSIGN (330) 72
    DIV_ASSIGN (331) 73
    MOD_ASSIGN (332) 74
    ADD_ASSIGN (333) 75
    MINUS_ASSIGN (334) 76
    LEFT_SHIFT_ASSIGN (335) 77
    RIGHT_SHIFT_ASSIGN (336) 78
    AND_ASSIGN (337) 79
    XOR_ASSIGN (338) 80
    OR_ASSIGN (339) 81
    COMMA (340) 20 24 83 93 144 146 150 154 156
    HASH (341)
    IDENTIFIER <st_entry> (342) 6 15 16 124 149 150 163 170 190
    CONSTANT_INT <intval> (343) 7
    LITERAL <string_type> (344) 10
    CONSTANT_FLOAT <string_type> (345) 8
    CONSTANT_CHAR <string_type> (346) 9
    "then" (347)


Nonterminals, with rules where they appear

    $accept (93)
        on left: 0
    M <intval> (94)
        on left: 1
        on right: 64 66 68 170 175 182 183 185 186 187 188 189
    N <statement_entry> (95)
        on left: 2
        on right: 68 182 183 187 188 189
    X (96)
        on left: 3
        on right: 173 185 187 188 189
    blocktable (97)
        on left: 4
        on right: 173 185 187 188 189
    changetable (98)
        on left: 5
        on right: 134 135 199
    primary_expression <exp_entry> (99)
        on left: 6 7 8 9 10 11
        on right: 12
    postfix_expression <ar_entry> (100)
        on left: 12 13 14 15 16 17 18 19 20
        on right: 13 14 15 16 17 18 25
    argument_expression_list_opt <intval> (101)
        on left: 21 22
        on right: 14
    argument_expression_list <intval> (102)
        on left: 23 24
        on right: 21 24
    unary_expression <ar_entry> (103)
        on left: 25 26 27 28 29 30
        on right: 26 27 29 37 70
    unary_operator <u_op> (104)
        on left: 31 32 33 34 35 36
        on right: 28
    cast_expression <ar_entry> (105)
        on left: 37 38
        on right: 28 38 39 40 41 42
    multiplicative_expression <exp_entry> (106)
        on left: 39 40 41 42
        on right: 40 41 42 43 44 45
    additive_expression <exp_entry> (107)
        on left: 43 44 45
        on right: 44 45 46 47 48
    shift_expression <exp_entry> (108)
        on left: 46 47 48
        on right: 47 48 49 50 51 52 53
    relational_expression <exp_entry> (109)
        on left: 49 50 51 52 53
        on right: 50 51 52 53 54 55 56
    equality_expression <exp_entry> (110)
        on left: 54 55 56
        on right: 55 56 57 58
    and_expression <exp_entry> (111)
        on left: 57 58
        on right: 58 59 60
    exclusive_or_expression <exp_entry> (112)
        on left: 59 60
        on right: 60 61 62
    inclusive_or_expression <exp_entry> (113)
        on left: 61 62
        on right: 62 63 64
    logical_and_expression <exp_entry> (114)
        on left: 63 64
        on right: 64 65 66
    logical_or_expression <exp_entry> (115)
        on left: 65 66
        on right: 66 67 68
    conditional_expression <exp_entry> (116)
        on left: 67 68
        on right: 68 69 84
    assignment_expression <exp_entry> (117)
        on left: 69 70
        on right: 23 24 70 82 83 126 128 130 131 152
    assignment_operator (118)
        on left: 71 72 73 74 75 76 77 78 79 80 81
        on right: 70
    expression <exp_entry> (119)
        on left: 82 83
        on right: 11 13 68 83 180 182 183 184 185 186 187 188 189 193
    constant_expression <exp_entry> (120)
        on left: 84
        on right: 162 171
    declaration (121)
        on left: 85
        on right: 178 188 189 198 200 201
    declaration_specifiers (122)
        on left: 86 87 88 89
        on right: 85 91 147 148 199
    declaration_specifiers_opt (123)
        on left: 90 91
        on right: 86 87 88 89
    init_declarator_list (124)
        on left: 92 93
        on right: 93 95
    init_declarator_list_opt (125)
        on left: 94 95
        on right: 85
    init_declarator <st_entry> (126)
        on left: 96 97
        on right: 92 93
    storage_class_specifier (127)
        on left: 98 99 100 101
        on right: 86
    type_specifier (128)
        on left: 102 103 104 105 106 107 108 109 110 111 112 113
        on right: 87 114
    specifier_qualifier_list (129)
        on left: 114 115
        on right: 117 151
    specifier_qualifier_list_opt (130)
        on left: 116 117
        on right: 114 115
    type_qualifier (131)
        on left: 118 119 120
        on right: 88 115 139 140
    function_specifier (132)
        on left: 121
        on right: 89
    declarator <st_entry> (133)
        on left: 122 123
        on right: 96 97 125 147 199
    direct_declarator <st_entry> (134)
        on left: 124 125 126 127 128 129 130 131 132 133 134 135 136
        on right: 122 123 126 127 128 129 130 131 132 133 134 135 136
    pointer <s_type> (135)
        on left: 137 138
        on right: 122 138
    type_qualifier_list (136)
        on left: 139 140
        on right: 126 127 130 132 140 142
    type_qualifier_list_opt (137)
        on left: 141 142
        on right: 137 138
    parameter_type_list (138)
        on left: 143 144
        on right: 134
    parameter_list (139)
        on left: 145 146
        on right: 143 144 146
    parameter_declaration (140)
        on left: 147 148
        on right: 145 146
    identifier_list (141)
        on left: 149 150
        on right: 136 150
    type_name (142)
        on left: 151
        on right: 19 20 30 38
    initializer <st_entry> (143)
        on left: 152 153 154
        on right: 97 155 156
    initializer_list (144)
        on left: 155 156
        on right: 19 20 153 154 156
    designation (145)
        on left: 157
        on right: 159
    designation_opt (146)
        on left: 158 159
        on right: 155 156
    designator_list (147)
        on left: 160 161
        on right: 157 161
    designator (148)
        on left: 162 163
        on right: 160 161
    statement <statement_entry> (149)
        on left: 164 165 166 167 168 169
        on right: 170 171 172 179 182 183 184 185 186 187 188 189
    labeled_statement <statement_entry> (150)
        on left: 170 171 172
        on right: 164
    compound_statement <statement_entry> (151)
        on left: 173
        on right: 165 199
    block_item_list <statement_entry> (152)
        on left: 174 175
        on right: 175 177
    block_item_list_opt <statement_entry> (153)
        on left: 176 177
        on right: 173
    block_item <statement_entry> (154)
        on left: 178 179
        on right: 174 175
    expression_statement <exp_entry> (155)
        on left: 180 181
        on right: 166 187 188 189
    selection_statement <statement_entry> (156)
        on left: 182 183 184
        on right: 167
    iteration_statement <statement_entry> (157)
        on left: 185 186 187 188 189
        on right: 168
    jump_statement <statement_entry> (158)
        on left: 190 191 192 193 194
        on right: 169
    translation_unit (159)
        on left: 195 196
        on right: 0 196
    external_declaration (160)
        on left: 197 198
        on right: 195 196
    function_definition (161)
        on left: 199
        on right: 197
    declaration_list (162)
        on left: 200 201
        on right: 201 203
    declaration_list_opt (163)
        on left: 202 203
        on right: 199


State 0

    0 $accept: • translation_unit $end

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    declaration              go to state 21
    declaration_specifiers   go to state 22
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    translation_unit         go to state 27
    external_declaration     go to state 28
    function_definition      go to state 29


State 1

  100 storage_class_specifier: AUTO •

    $default  reduce using rule 100 (storage_class_specifier)


State 2

  119 type_qualifier: RESTRICT •

    $default  reduce using rule 119 (type_qualifier)


State 3

  110 type_specifier: UNSIGNED •

    $default  reduce using rule 110 (type_specifier)


State 4

   98 storage_class_specifier: EXTERN •

    $default  reduce using rule 98 (storage_class_specifier)


State 5

  102 type_specifier: VOID •

    $default  reduce using rule 102 (type_specifier)


State 6

  105 type_specifier: FLOAT •

    $default  reduce using rule 105 (type_specifier)


State 7

  107 type_specifier: SHORT •

    $default  reduce using rule 107 (type_specifier)


State 8

  120 type_qualifier: VOLATILE •

    $default  reduce using rule 120 (type_qualifier)


State 9

  103 type_specifier: CHAR •

    $default  reduce using rule 103 (type_specifier)


State 10

  109 type_specifier: SIGNED •

    $default  reduce using rule 109 (type_specifier)


State 11

  118 type_qualifier: CONST •

    $default  reduce using rule 118 (type_qualifier)


State 12

  111 type_specifier: BOOL •

    $default  reduce using rule 111 (type_specifier)


State 13

   99 storage_class_specifier: STATIC •

    $default  reduce using rule 99 (storage_class_specifier)


State 14

  112 type_specifier: COMPLEX •

    $default  reduce using rule 112 (type_specifier)


State 15

  121 function_specifier: INLINE •

    $default  reduce using rule 121 (function_specifier)


State 16

  113 type_specifier: IMAGINARY •

    $default  reduce using rule 113 (type_specifier)


State 17

  104 type_specifier: INT •

    $default  reduce using rule 104 (type_specifier)


State 18

  108 type_specifier: DOUBLE •

    $default  reduce using rule 108 (type_specifier)


State 19

  106 type_specifier: LONG •

    $default  reduce using rule 106 (type_specifier)


State 20

  101 storage_class_specifier: REGISTER •

    $default  reduce using rule 101 (storage_class_specifier)


State 21

  198 external_declaration: declaration •

    $default  reduce using rule 198 (external_declaration)


State 22

   85 declaration: declaration_specifiers • init_declarator_list_opt SEMICOLON
  199 function_definition: declaration_specifiers • declarator declaration_list_opt changetable compound_statement

    LP          shift, and go to state 30
    ASTERISK    shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 94 (init_declarator_list_opt)

    init_declarator_list      go to state 33
    init_declarator_list_opt  go to state 34
    init_declarator           go to state 35
    declarator                go to state 36
    direct_declarator         go to state 37
    pointer                   go to state 38


State 23

   86 declaration_specifiers: storage_class_specifier • declaration_specifiers_opt

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 39
    declaration_specifiers_opt  go to state 40
    storage_class_specifier     go to state 23
    type_specifier              go to state 24
    type_qualifier              go to state 25
    function_specifier          go to state 26


State 24

   87 declaration_specifiers: type_specifier • declaration_specifiers_opt

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 39
    declaration_specifiers_opt  go to state 41
    storage_class_specifier     go to state 23
    type_specifier              go to state 24
    type_qualifier              go to state 25
    function_specifier          go to state 26


State 25

   88 declaration_specifiers: type_qualifier • declaration_specifiers_opt

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 39
    declaration_specifiers_opt  go to state 42
    storage_class_specifier     go to state 23
    type_specifier              go to state 24
    type_qualifier              go to state 25
    function_specifier          go to state 26


State 26

   89 declaration_specifiers: function_specifier • declaration_specifiers_opt

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 39
    declaration_specifiers_opt  go to state 43
    storage_class_specifier     go to state 23
    type_specifier              go to state 24
    type_qualifier              go to state 25
    function_specifier          go to state 26


State 27

    0 $accept: translation_unit • $end
  196 translation_unit: translation_unit • external_declaration

    $end       shift, and go to state 44
    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    declaration              go to state 21
    declaration_specifiers   go to state 22
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    external_declaration     go to state 45
    function_definition      go to state 29


State 28

  195 translation_unit: external_declaration •

    $default  reduce using rule 195 (translation_unit)


State 29

  197 external_declaration: function_definition •

    $default  reduce using rule 197 (external_declaration)


State 30

  125 direct_declarator: LP • declarator RP

    LP          shift, and go to state 30
    ASTERISK    shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    declarator         go to state 46
    direct_declarator  go to state 37
    pointer            go to state 38


State 31

  137 pointer: ASTERISK • type_qualifier_list_opt
  138        | ASTERISK • type_qualifier_list_opt pointer

    RESTRICT  shift, and go to state 2
    VOLATILE  shift, and go to state 8
    CONST     shift, and go to state 11

    $default  reduce using rule 141 (type_qualifier_list_opt)

    type_qualifier           go to state 47
    type_qualifier_list      go to state 48
    type_qualifier_list_opt  go to state 49


State 32

  124 direct_declarator: IDENTIFIER •

    $default  reduce using rule 124 (direct_declarator)


State 33

   93 init_declarator_list: init_declarator_list • COMMA init_declarator
   95 init_declarator_list_opt: init_declarator_list •

    COMMA  shift, and go to state 50

    $default  reduce using rule 95 (init_declarator_list_opt)


State 34

   85 declaration: declaration_specifiers init_declarator_list_opt • SEMICOLON

    SEMICOLON  shift, and go to state 51


State 35

   92 init_declarator_list: init_declarator •

    $default  reduce using rule 92 (init_declarator_list)


State 36

   96 init_declarator: declarator •
   97                | declarator • ASSIGN initializer
  199 function_definition: declaration_specifiers declarator • declaration_list_opt changetable compound_statement

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20
    ASSIGN     shift, and go to state 52

    CURLY_BRACKET_L  reduce using rule 202 (declaration_list_opt)
    $default         reduce using rule 96 (init_declarator)

    declaration              go to state 53
    declaration_specifiers   go to state 54
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    declaration_list         go to state 55
    declaration_list_opt     go to state 56


State 37

  123 declarator: direct_declarator •
  126 direct_declarator: direct_declarator • SQ_BRACKET_L type_qualifier_list assignment_expression SQ_BRACKET_R
  127                  | direct_declarator • SQ_BRACKET_L type_qualifier_list SQ_BRACKET_R
  128                  | direct_declarator • SQ_BRACKET_L assignment_expression SQ_BRACKET_R
  129                  | direct_declarator • SQ_BRACKET_L SQ_BRACKET_R
  130                  | direct_declarator • SQ_BRACKET_L STATIC type_qualifier_list assignment_expression SQ_BRACKET_R
  131                  | direct_declarator • SQ_BRACKET_L STATIC assignment_expression SQ_BRACKET_R
  132                  | direct_declarator • SQ_BRACKET_L type_qualifier_list ASTERISK SQ_BRACKET_R
  133                  | direct_declarator • SQ_BRACKET_L ASTERISK SQ_BRACKET_R
  134                  | direct_declarator • LP changetable parameter_type_list RP
  135                  | direct_declarator • LP changetable RP
  136                  | direct_declarator • LP identifier_list RP

    LP            shift, and go to state 57
    SQ_BRACKET_L  shift, and go to state 58

    $default  reduce using rule 123 (declarator)


State 38

  122 declarator: pointer • direct_declarator

    LP          shift, and go to state 30
    IDENTIFIER  shift, and go to state 32

    direct_declarator  go to state 59


State 39

   91 declaration_specifiers_opt: declaration_specifiers •

    $default  reduce using rule 91 (declaration_specifiers_opt)


State 40

   86 declaration_specifiers: storage_class_specifier declaration_specifiers_opt •

    $default  reduce using rule 86 (declaration_specifiers)


State 41

   87 declaration_specifiers: type_specifier declaration_specifiers_opt •

    $default  reduce using rule 87 (declaration_specifiers)


State 42

   88 declaration_specifiers: type_qualifier declaration_specifiers_opt •

    $default  reduce using rule 88 (declaration_specifiers)


State 43

   89 declaration_specifiers: function_specifier declaration_specifiers_opt •

    $default  reduce using rule 89 (declaration_specifiers)


State 44

    0 $accept: translation_unit $end •

    $default  accept


State 45

  196 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 196 (translation_unit)


State 46

  125 direct_declarator: LP declarator • RP

    RP  shift, and go to state 60


State 47

  139 type_qualifier_list: type_qualifier •

    $default  reduce using rule 139 (type_qualifier_list)


State 48

  140 type_qualifier_list: type_qualifier_list • type_qualifier
  142 type_qualifier_list_opt: type_qualifier_list •

    RESTRICT  shift, and go to state 2
    VOLATILE  shift, and go to state 8
    CONST     shift, and go to state 11

    $default  reduce using rule 142 (type_qualifier_list_opt)

    type_qualifier  go to state 61


State 49

  137 pointer: ASTERISK type_qualifier_list_opt •
  138        | ASTERISK type_qualifier_list_opt • pointer

    ASTERISK  shift, and go to state 31

    $default  reduce using rule 137 (pointer)

    pointer  go to state 62


State 50

   93 init_declarator_list: init_declarator_list COMMA • init_declarator

    LP          shift, and go to state 30
    ASTERISK    shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    init_declarator    go to state 63
    declarator         go to state 64
    direct_declarator  go to state 37
    pointer            go to state 38


State 51

   85 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON •

    $default  reduce using rule 85 (declaration)


State 52

   97 init_declarator: declarator ASSIGN • initializer

    SIZEOF           shift, and go to state 65
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 67
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    IDENTIFIER       shift, and go to state 76
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 97
    initializer                go to state 98


State 53

  200 declaration_list: declaration •

    $default  reduce using rule 200 (declaration_list)


State 54

   85 declaration: declaration_specifiers • init_declarator_list_opt SEMICOLON

    LP          shift, and go to state 30
    ASTERISK    shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 94 (init_declarator_list_opt)

    init_declarator_list      go to state 33
    init_declarator_list_opt  go to state 34
    init_declarator           go to state 35
    declarator                go to state 64
    direct_declarator         go to state 37
    pointer                   go to state 38


State 55

  201 declaration_list: declaration_list • declaration
  203 declaration_list_opt: declaration_list •

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    $default  reduce using rule 203 (declaration_list_opt)

    declaration              go to state 99
    declaration_specifiers   go to state 54
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 56

  199 function_definition: declaration_specifiers declarator declaration_list_opt • changetable compound_statement

    $default  reduce using rule 5 (changetable)

    changetable  go to state 100


State 57

  134 direct_declarator: direct_declarator LP • changetable parameter_type_list RP
  135                  | direct_declarator LP • changetable RP
  136                  | direct_declarator LP • identifier_list RP

    IDENTIFIER  shift, and go to state 101

    $default  reduce using rule 5 (changetable)

    changetable      go to state 102
    identifier_list  go to state 103


State 58

  126 direct_declarator: direct_declarator SQ_BRACKET_L • type_qualifier_list assignment_expression SQ_BRACKET_R
  127                  | direct_declarator SQ_BRACKET_L • type_qualifier_list SQ_BRACKET_R
  128                  | direct_declarator SQ_BRACKET_L • assignment_expression SQ_BRACKET_R
  129                  | direct_declarator SQ_BRACKET_L • SQ_BRACKET_R
  130                  | direct_declarator SQ_BRACKET_L • STATIC type_qualifier_list assignment_expression SQ_BRACKET_R
  131                  | direct_declarator SQ_BRACKET_L • STATIC assignment_expression SQ_BRACKET_R
  132                  | direct_declarator SQ_BRACKET_L • type_qualifier_list ASTERISK SQ_BRACKET_R
  133                  | direct_declarator SQ_BRACKET_L • ASTERISK SQ_BRACKET_R

    RESTRICT        shift, and go to state 2
    VOLATILE        shift, and go to state 8
    CONST           shift, and go to state 11
    SIZEOF          shift, and go to state 65
    STATIC          shift, and go to state 104
    LP              shift, and go to state 66
    SQ_BRACKET_R    shift, and go to state 105
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 106
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 107
    type_qualifier             go to state 47
    type_qualifier_list        go to state 108


State 59

  122 declarator: pointer direct_declarator •
  126 direct_declarator: direct_declarator • SQ_BRACKET_L type_qualifier_list assignment_expression SQ_BRACKET_R
  127                  | direct_declarator • SQ_BRACKET_L type_qualifier_list SQ_BRACKET_R
  128                  | direct_declarator • SQ_BRACKET_L assignment_expression SQ_BRACKET_R
  129                  | direct_declarator • SQ_BRACKET_L SQ_BRACKET_R
  130                  | direct_declarator • SQ_BRACKET_L STATIC type_qualifier_list assignment_expression SQ_BRACKET_R
  131                  | direct_declarator • SQ_BRACKET_L STATIC assignment_expression SQ_BRACKET_R
  132                  | direct_declarator • SQ_BRACKET_L type_qualifier_list ASTERISK SQ_BRACKET_R
  133                  | direct_declarator • SQ_BRACKET_L ASTERISK SQ_BRACKET_R
  134                  | direct_declarator • LP changetable parameter_type_list RP
  135                  | direct_declarator • LP changetable RP
  136                  | direct_declarator • LP identifier_list RP

    LP            shift, and go to state 57
    SQ_BRACKET_L  shift, and go to state 58

    $default  reduce using rule 122 (declarator)


State 60

  125 direct_declarator: LP declarator RP •

    $default  reduce using rule 125 (direct_declarator)


State 61

  140 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 140 (type_qualifier_list)


State 62

  138 pointer: ASTERISK type_qualifier_list_opt pointer •

    $default  reduce using rule 138 (pointer)


State 63

   93 init_declarator_list: init_declarator_list COMMA init_declarator •

    $default  reduce using rule 93 (init_declarator_list)


State 64

   96 init_declarator: declarator •
   97                | declarator • ASSIGN initializer

    ASSIGN  shift, and go to state 52

    $default  reduce using rule 96 (init_declarator)


State 65

   29 unary_expression: SIZEOF • unary_expression
   30                 | SIZEOF • LP type_name RP

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 109
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression  go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 110
    unary_operator      go to state 84


State 66

   11 primary_expression: LP • expression RP
   19 postfix_expression: LP • type_name RP CURLY_BRACKET_L initializer_list CURLY_BRACKET_R
   20                   | LP • type_name RP CURLY_BRACKET_L initializer_list COMMA CURLY_BRACKET_R
   38 cast_expression: LP • type_name RP cast_expression

    RESTRICT        shift, and go to state 2
    UNSIGNED        shift, and go to state 3
    VOID            shift, and go to state 5
    FLOAT           shift, and go to state 6
    SHORT           shift, and go to state 7
    VOLATILE        shift, and go to state 8
    CHAR            shift, and go to state 9
    SIGNED          shift, and go to state 10
    CONST           shift, and go to state 11
    SIZEOF          shift, and go to state 65
    BOOL            shift, and go to state 12
    COMPLEX         shift, and go to state 14
    IMAGINARY       shift, and go to state 16
    INT             shift, and go to state 17
    DOUBLE          shift, and go to state 18
    LONG            shift, and go to state 19
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 112
    type_specifier             go to state 113
    specifier_qualifier_list   go to state 114
    type_qualifier             go to state 115
    type_name                  go to state 116


State 67

  153 initializer: CURLY_BRACKET_L • initializer_list CURLY_BRACKET_R
  154            | CURLY_BRACKET_L • initializer_list COMMA CURLY_BRACKET_R

    SQ_BRACKET_L  shift, and go to state 117
    PERIOD        shift, and go to state 118

    $default  reduce using rule 158 (designation_opt)

    initializer_list  go to state 119
    designation       go to state 120
    designation_opt   go to state 121
    designator_list   go to state 122
    designator        go to state 123


State 68

   26 unary_expression: INCREMENT • unary_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 124
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression  go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 125
    unary_operator      go to state 84


State 69

   27 unary_expression: DECREMENT • unary_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 124
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression  go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 126
    unary_operator      go to state 84


State 70

   31 unary_operator: AMPERSAND •

    $default  reduce using rule 31 (unary_operator)


State 71

   32 unary_operator: ASTERISK •

    $default  reduce using rule 32 (unary_operator)


State 72

   33 unary_operator: PLUS •

    $default  reduce using rule 33 (unary_operator)


State 73

   34 unary_operator: MINUS •

    $default  reduce using rule 34 (unary_operator)


State 74

   35 unary_operator: TILDE •

    $default  reduce using rule 35 (unary_operator)


State 75

   36 unary_operator: EXCLAMATION •

    $default  reduce using rule 36 (unary_operator)


State 76

    6 primary_expression: IDENTIFIER •

    $default  reduce using rule 6 (primary_expression)


State 77

    7 primary_expression: CONSTANT_INT •

    $default  reduce using rule 7 (primary_expression)


State 78

   10 primary_expression: LITERAL •

    $default  reduce using rule 10 (primary_expression)


State 79

    8 primary_expression: CONSTANT_FLOAT •

    $default  reduce using rule 8 (primary_expression)


State 80

    9 primary_expression: CONSTANT_CHAR •

    $default  reduce using rule 9 (primary_expression)


State 81

   12 postfix_expression: primary_expression •

    $default  reduce using rule 12 (postfix_expression)


State 82

   13 postfix_expression: postfix_expression • SQ_BRACKET_L expression SQ_BRACKET_R
   14                   | postfix_expression • LP argument_expression_list_opt RP
   15                   | postfix_expression • PERIOD IDENTIFIER
   16                   | postfix_expression • ARROW IDENTIFIER
   17                   | postfix_expression • INCREMENT
   18                   | postfix_expression • DECREMENT
   25 unary_expression: postfix_expression •

    LP            shift, and go to state 127
    SQ_BRACKET_L  shift, and go to state 128
    PERIOD        shift, and go to state 129
    ARROW         shift, and go to state 130
    INCREMENT     shift, and go to state 131
    DECREMENT     shift, and go to state 132

    $default  reduce using rule 25 (unary_expression)


State 83

   37 cast_expression: unary_expression •
   70 assignment_expression: unary_expression • assignment_operator assignment_expression

    ASSIGN              shift, and go to state 133
    MUL_ASSIGN          shift, and go to state 134
    DIV_ASSIGN          shift, and go to state 135
    MOD_ASSIGN          shift, and go to state 136
    ADD_ASSIGN          shift, and go to state 137
    MINUS_ASSIGN        shift, and go to state 138
    LEFT_SHIFT_ASSIGN   shift, and go to state 139
    RIGHT_SHIFT_ASSIGN  shift, and go to state 140
    AND_ASSIGN          shift, and go to state 141
    XOR_ASSIGN          shift, and go to state 142
    OR_ASSIGN           shift, and go to state 143

    $default  reduce using rule 37 (cast_expression)

    assignment_operator  go to state 144


State 84

   28 unary_expression: unary_operator • cast_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression  go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 145
    unary_operator      go to state 84
    cast_expression     go to state 146


State 85

   39 multiplicative_expression: cast_expression •

    $default  reduce using rule 39 (multiplicative_expression)


State 86

   40 multiplicative_expression: multiplicative_expression • ASTERISK cast_expression
   41                          | multiplicative_expression • SLASH cast_expression
   42                          | multiplicative_expression • PERCENT cast_expression
   43 additive_expression: multiplicative_expression •

    ASTERISK  shift, and go to state 147
    SLASH     shift, and go to state 148
    PERCENT   shift, and go to state 149

    $default  reduce using rule 43 (additive_expression)


State 87

   44 additive_expression: additive_expression • PLUS multiplicative_expression
   45                    | additive_expression • MINUS multiplicative_expression
   46 shift_expression: additive_expression •

    PLUS   shift, and go to state 150
    MINUS  shift, and go to state 151

    $default  reduce using rule 46 (shift_expression)


State 88

   47 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   48                 | shift_expression • RIGHT_SHIFT additive_expression
   49 relational_expression: shift_expression •

    LEFT_SHIFT   shift, and go to state 152
    RIGHT_SHIFT  shift, and go to state 153

    $default  reduce using rule 49 (relational_expression)


State 89

   50 relational_expression: relational_expression • LESS_THAN shift_expression
   51                      | relational_expression • GREATER_THAN shift_expression
   52                      | relational_expression • LESS_THAN_EQUAL shift_expression
   53                      | relational_expression • GREATER_THAN_EQUAL shift_expression
   54 equality_expression: relational_expression •

    LESS_THAN           shift, and go to state 154
    GREATER_THAN        shift, and go to state 155
    LESS_THAN_EQUAL     shift, and go to state 156
    GREATER_THAN_EQUAL  shift, and go to state 157

    $default  reduce using rule 54 (equality_expression)


State 90

   55 equality_expression: equality_expression • EQUAL relational_expression
   56                    | equality_expression • NOT_EQUAL relational_expression
   57 and_expression: equality_expression •

    EQUAL      shift, and go to state 158
    NOT_EQUAL  shift, and go to state 159

    $default  reduce using rule 57 (and_expression)


State 91

   58 and_expression: and_expression • AMPERSAND equality_expression
   59 exclusive_or_expression: and_expression •

    AMPERSAND  shift, and go to state 160

    $default  reduce using rule 59 (exclusive_or_expression)


State 92

   60 exclusive_or_expression: exclusive_or_expression • CARET and_expression
   61 inclusive_or_expression: exclusive_or_expression •

    CARET  shift, and go to state 161

    $default  reduce using rule 61 (inclusive_or_expression)


State 93

   62 inclusive_or_expression: inclusive_or_expression • PIPE exclusive_or_expression
   63 logical_and_expression: inclusive_or_expression •

    PIPE  shift, and go to state 162

    $default  reduce using rule 63 (logical_and_expression)


State 94

   64 logical_and_expression: logical_and_expression • LOGICAL_AND M inclusive_or_expression
   65 logical_or_expression: logical_and_expression •

    LOGICAL_AND  shift, and go to state 163

    $default  reduce using rule 65 (logical_or_expression)


State 95

   66 logical_or_expression: logical_or_expression • LOGICAL_OR M logical_and_expression
   67 conditional_expression: logical_or_expression •
   68                       | logical_or_expression • N QUESTION M expression N COLON M conditional_expression

    LOGICAL_OR  shift, and go to state 164

    QUESTION  reduce using rule 2 (N)
    $default  reduce using rule 67 (conditional_expression)

    N  go to state 165


State 96

   69 assignment_expression: conditional_expression •

    $default  reduce using rule 69 (assignment_expression)


State 97

  152 initializer: assignment_expression •

    $default  reduce using rule 152 (initializer)


State 98

   97 init_declarator: declarator ASSIGN initializer •

    $default  reduce using rule 97 (init_declarator)


State 99

  201 declaration_list: declaration_list declaration •

    $default  reduce using rule 201 (declaration_list)


State 100

  199 function_definition: declaration_specifiers declarator declaration_list_opt changetable • compound_statement

    CURLY_BRACKET_L  shift, and go to state 166

    compound_statement  go to state 167


State 101

  149 identifier_list: IDENTIFIER •

    $default  reduce using rule 149 (identifier_list)


State 102

  134 direct_declarator: direct_declarator LP changetable • parameter_type_list RP
  135                  | direct_declarator LP changetable • RP

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20
    RP         shift, and go to state 168

    declaration_specifiers   go to state 169
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    parameter_type_list      go to state 170
    parameter_list           go to state 171
    parameter_declaration    go to state 172


State 103

  136 direct_declarator: direct_declarator LP identifier_list • RP
  150 identifier_list: identifier_list • COMMA IDENTIFIER

    RP     shift, and go to state 173
    COMMA  shift, and go to state 174


State 104

  130 direct_declarator: direct_declarator SQ_BRACKET_L STATIC • type_qualifier_list assignment_expression SQ_BRACKET_R
  131                  | direct_declarator SQ_BRACKET_L STATIC • assignment_expression SQ_BRACKET_R

    RESTRICT        shift, and go to state 2
    VOLATILE        shift, and go to state 8
    CONST           shift, and go to state 11
    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 175
    type_qualifier             go to state 47
    type_qualifier_list        go to state 176


State 105

  129 direct_declarator: direct_declarator SQ_BRACKET_L SQ_BRACKET_R •

    $default  reduce using rule 129 (direct_declarator)


State 106

   32 unary_operator: ASTERISK •
  133 direct_declarator: direct_declarator SQ_BRACKET_L ASTERISK • SQ_BRACKET_R

    SQ_BRACKET_R  shift, and go to state 177

    $default  reduce using rule 32 (unary_operator)


State 107

  128 direct_declarator: direct_declarator SQ_BRACKET_L assignment_expression • SQ_BRACKET_R

    SQ_BRACKET_R  shift, and go to state 178


State 108

  126 direct_declarator: direct_declarator SQ_BRACKET_L type_qualifier_list • assignment_expression SQ_BRACKET_R
  127                  | direct_declarator SQ_BRACKET_L type_qualifier_list • SQ_BRACKET_R
  132                  | direct_declarator SQ_BRACKET_L type_qualifier_list • ASTERISK SQ_BRACKET_R
  140 type_qualifier_list: type_qualifier_list • type_qualifier

    RESTRICT        shift, and go to state 2
    VOLATILE        shift, and go to state 8
    CONST           shift, and go to state 11
    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    SQ_BRACKET_R    shift, and go to state 179
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 180
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 181
    type_qualifier             go to state 61


State 109

   11 primary_expression: LP • expression RP
   19 postfix_expression: LP • type_name RP CURLY_BRACKET_L initializer_list CURLY_BRACKET_R
   20                   | LP • type_name RP CURLY_BRACKET_L initializer_list COMMA CURLY_BRACKET_R
   30 unary_expression: SIZEOF LP • type_name RP

    RESTRICT        shift, and go to state 2
    UNSIGNED        shift, and go to state 3
    VOID            shift, and go to state 5
    FLOAT           shift, and go to state 6
    SHORT           shift, and go to state 7
    VOLATILE        shift, and go to state 8
    CHAR            shift, and go to state 9
    SIGNED          shift, and go to state 10
    CONST           shift, and go to state 11
    SIZEOF          shift, and go to state 65
    BOOL            shift, and go to state 12
    COMPLEX         shift, and go to state 14
    IMAGINARY       shift, and go to state 16
    INT             shift, and go to state 17
    DOUBLE          shift, and go to state 18
    LONG            shift, and go to state 19
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 112
    type_specifier             go to state 113
    specifier_qualifier_list   go to state 114
    type_qualifier             go to state 115
    type_name                  go to state 182


State 110

   29 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 29 (unary_expression)


State 111

   82 expression: assignment_expression •

    $default  reduce using rule 82 (expression)


State 112

   11 primary_expression: LP expression • RP
   83 expression: expression • COMMA assignment_expression

    RP     shift, and go to state 183
    COMMA  shift, and go to state 184


State 113

  114 specifier_qualifier_list: type_specifier • specifier_qualifier_list_opt

    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    COMPLEX    shift, and go to state 14
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19

    $default  reduce using rule 116 (specifier_qualifier_list_opt)

    type_specifier                go to state 113
    specifier_qualifier_list      go to state 185
    specifier_qualifier_list_opt  go to state 186
    type_qualifier                go to state 115


State 114

  151 type_name: specifier_qualifier_list •

    $default  reduce using rule 151 (type_name)


State 115

  115 specifier_qualifier_list: type_qualifier • specifier_qualifier_list_opt

    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    COMPLEX    shift, and go to state 14
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19

    $default  reduce using rule 116 (specifier_qualifier_list_opt)

    type_specifier                go to state 113
    specifier_qualifier_list      go to state 185
    specifier_qualifier_list_opt  go to state 187
    type_qualifier                go to state 115


State 116

   19 postfix_expression: LP type_name • RP CURLY_BRACKET_L initializer_list CURLY_BRACKET_R
   20                   | LP type_name • RP CURLY_BRACKET_L initializer_list COMMA CURLY_BRACKET_R
   38 cast_expression: LP type_name • RP cast_expression

    RP  shift, and go to state 188


State 117

  162 designator: SQ_BRACKET_L • constant_expression SQ_BRACKET_R

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 189
    constant_expression        go to state 190


State 118

  163 designator: PERIOD • IDENTIFIER

    IDENTIFIER  shift, and go to state 191


State 119

  153 initializer: CURLY_BRACKET_L initializer_list • CURLY_BRACKET_R
  154            | CURLY_BRACKET_L initializer_list • COMMA CURLY_BRACKET_R
  156 initializer_list: initializer_list • COMMA designation_opt initializer

    CURLY_BRACKET_R  shift, and go to state 192
    COMMA            shift, and go to state 193


State 120

  159 designation_opt: designation •

    $default  reduce using rule 159 (designation_opt)


State 121

  155 initializer_list: designation_opt • initializer

    SIZEOF           shift, and go to state 65
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 67
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    IDENTIFIER       shift, and go to state 76
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 97
    initializer                go to state 194


State 122

  157 designation: designator_list • ASSIGN
  161 designator_list: designator_list • designator

    SQ_BRACKET_L  shift, and go to state 117
    PERIOD        shift, and go to state 118
    ASSIGN        shift, and go to state 195

    designator  go to state 196


State 123

  160 designator_list: designator •

    $default  reduce using rule 160 (designator_list)


State 124

   11 primary_expression: LP • expression RP
   19 postfix_expression: LP • type_name RP CURLY_BRACKET_L initializer_list CURLY_BRACKET_R
   20                   | LP • type_name RP CURLY_BRACKET_L initializer_list COMMA CURLY_BRACKET_R

    RESTRICT        shift, and go to state 2
    UNSIGNED        shift, and go to state 3
    VOID            shift, and go to state 5
    FLOAT           shift, and go to state 6
    SHORT           shift, and go to state 7
    VOLATILE        shift, and go to state 8
    CHAR            shift, and go to state 9
    SIGNED          shift, and go to state 10
    CONST           shift, and go to state 11
    SIZEOF          shift, and go to state 65
    BOOL            shift, and go to state 12
    COMPLEX         shift, and go to state 14
    IMAGINARY       shift, and go to state 16
    INT             shift, and go to state 17
    DOUBLE          shift, and go to state 18
    LONG            shift, and go to state 19
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 112
    type_specifier             go to state 113
    specifier_qualifier_list   go to state 114
    type_qualifier             go to state 115
    type_name                  go to state 197


State 125

   26 unary_expression: INCREMENT unary_expression •

    $default  reduce using rule 26 (unary_expression)


State 126

   27 unary_expression: DECREMENT unary_expression •

    $default  reduce using rule 27 (unary_expression)


State 127

   14 postfix_expression: postfix_expression LP • argument_expression_list_opt RP

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    $default  reduce using rule 22 (argument_expression_list_opt)

    primary_expression            go to state 81
    postfix_expression            go to state 82
    argument_expression_list_opt  go to state 198
    argument_expression_list      go to state 199
    unary_expression              go to state 83
    unary_operator                go to state 84
    cast_expression               go to state 85
    multiplicative_expression     go to state 86
    additive_expression           go to state 87
    shift_expression              go to state 88
    relational_expression         go to state 89
    equality_expression           go to state 90
    and_expression                go to state 91
    exclusive_or_expression       go to state 92
    inclusive_or_expression       go to state 93
    logical_and_expression        go to state 94
    logical_or_expression         go to state 95
    conditional_expression        go to state 96
    assignment_expression         go to state 200


State 128

   13 postfix_expression: postfix_expression SQ_BRACKET_L • expression SQ_BRACKET_R

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 201


State 129

   15 postfix_expression: postfix_expression PERIOD • IDENTIFIER

    IDENTIFIER  shift, and go to state 202


State 130

   16 postfix_expression: postfix_expression ARROW • IDENTIFIER

    IDENTIFIER  shift, and go to state 203


State 131

   17 postfix_expression: postfix_expression INCREMENT •

    $default  reduce using rule 17 (postfix_expression)


State 132

   18 postfix_expression: postfix_expression DECREMENT •

    $default  reduce using rule 18 (postfix_expression)


State 133

   71 assignment_operator: ASSIGN •

    $default  reduce using rule 71 (assignment_operator)


State 134

   72 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 72 (assignment_operator)


State 135

   73 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 73 (assignment_operator)


State 136

   74 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 74 (assignment_operator)


State 137

   75 assignment_operator: ADD_ASSIGN •

    $default  reduce using rule 75 (assignment_operator)


State 138

   76 assignment_operator: MINUS_ASSIGN •

    $default  reduce using rule 76 (assignment_operator)


State 139

   77 assignment_operator: LEFT_SHIFT_ASSIGN •

    $default  reduce using rule 77 (assignment_operator)


State 140

   78 assignment_operator: RIGHT_SHIFT_ASSIGN •

    $default  reduce using rule 78 (assignment_operator)


State 141

   79 assignment_operator: AND_ASSIGN •

    $default  reduce using rule 79 (assignment_operator)


State 142

   80 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 80 (assignment_operator)


State 143

   81 assignment_operator: OR_ASSIGN •

    $default  reduce using rule 81 (assignment_operator)


State 144

   70 assignment_expression: unary_expression assignment_operator • assignment_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 204


State 145

   37 cast_expression: unary_expression •

    $default  reduce using rule 37 (cast_expression)


State 146

   28 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 28 (unary_expression)


State 147

   40 multiplicative_expression: multiplicative_expression ASTERISK • cast_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression  go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 145
    unary_operator      go to state 84
    cast_expression     go to state 205


State 148

   41 multiplicative_expression: multiplicative_expression SLASH • cast_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression  go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 145
    unary_operator      go to state 84
    cast_expression     go to state 206


State 149

   42 multiplicative_expression: multiplicative_expression PERCENT • cast_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression  go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 145
    unary_operator      go to state 84
    cast_expression     go to state 207


State 150

   44 additive_expression: additive_expression PLUS • multiplicative_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 208


State 151

   45 additive_expression: additive_expression MINUS • multiplicative_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 209


State 152

   47 shift_expression: shift_expression LEFT_SHIFT • additive_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 210


State 153

   48 shift_expression: shift_expression RIGHT_SHIFT • additive_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 211


State 154

   50 relational_expression: relational_expression LESS_THAN • shift_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 212


State 155

   51 relational_expression: relational_expression GREATER_THAN • shift_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 213


State 156

   52 relational_expression: relational_expression LESS_THAN_EQUAL • shift_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 214


State 157

   53 relational_expression: relational_expression GREATER_THAN_EQUAL • shift_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 215


State 158

   55 equality_expression: equality_expression EQUAL • relational_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 216


State 159

   56 equality_expression: equality_expression NOT_EQUAL • relational_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 217


State 160

   58 and_expression: and_expression AMPERSAND • equality_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 218


State 161

   60 exclusive_or_expression: exclusive_or_expression CARET • and_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 219


State 162

   62 inclusive_or_expression: inclusive_or_expression PIPE • exclusive_or_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 220


State 163

   64 logical_and_expression: logical_and_expression LOGICAL_AND • M inclusive_or_expression

    $default  reduce using rule 1 (M)

    M  go to state 221


State 164

   66 logical_or_expression: logical_or_expression LOGICAL_OR • M logical_and_expression

    $default  reduce using rule 1 (M)

    M  go to state 222


State 165

   68 conditional_expression: logical_or_expression N • QUESTION M expression N COLON M conditional_expression

    QUESTION  shift, and go to state 223


State 166

  173 compound_statement: CURLY_BRACKET_L • X blocktable block_item_list_opt CURLY_BRACKET_R

    $default  reduce using rule 3 (X)

    X  go to state 224


State 167

  199 function_definition: declaration_specifiers declarator declaration_list_opt changetable compound_statement •

    $default  reduce using rule 199 (function_definition)


State 168

  135 direct_declarator: direct_declarator LP changetable RP •

    $default  reduce using rule 135 (direct_declarator)


State 169

  147 parameter_declaration: declaration_specifiers • declarator
  148                      | declaration_specifiers •

    LP          shift, and go to state 30
    ASTERISK    shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 148 (parameter_declaration)

    declarator         go to state 225
    direct_declarator  go to state 37
    pointer            go to state 38


State 170

  134 direct_declarator: direct_declarator LP changetable parameter_type_list • RP

    RP  shift, and go to state 226


State 171

  143 parameter_type_list: parameter_list •
  144                    | parameter_list • COMMA ELLIPSIS
  146 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 227

    $default  reduce using rule 143 (parameter_type_list)


State 172

  145 parameter_list: parameter_declaration •

    $default  reduce using rule 145 (parameter_list)


State 173

  136 direct_declarator: direct_declarator LP identifier_list RP •

    $default  reduce using rule 136 (direct_declarator)


State 174

  150 identifier_list: identifier_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 228


State 175

  131 direct_declarator: direct_declarator SQ_BRACKET_L STATIC assignment_expression • SQ_BRACKET_R

    SQ_BRACKET_R  shift, and go to state 229


State 176

  130 direct_declarator: direct_declarator SQ_BRACKET_L STATIC type_qualifier_list • assignment_expression SQ_BRACKET_R
  140 type_qualifier_list: type_qualifier_list • type_qualifier

    RESTRICT        shift, and go to state 2
    VOLATILE        shift, and go to state 8
    CONST           shift, and go to state 11
    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 230
    type_qualifier             go to state 61


State 177

  133 direct_declarator: direct_declarator SQ_BRACKET_L ASTERISK SQ_BRACKET_R •

    $default  reduce using rule 133 (direct_declarator)


State 178

  128 direct_declarator: direct_declarator SQ_BRACKET_L assignment_expression SQ_BRACKET_R •

    $default  reduce using rule 128 (direct_declarator)


State 179

  127 direct_declarator: direct_declarator SQ_BRACKET_L type_qualifier_list SQ_BRACKET_R •

    $default  reduce using rule 127 (direct_declarator)


State 180

   32 unary_operator: ASTERISK •
  132 direct_declarator: direct_declarator SQ_BRACKET_L type_qualifier_list ASTERISK • SQ_BRACKET_R

    SQ_BRACKET_R  shift, and go to state 231

    $default  reduce using rule 32 (unary_operator)


State 181

  126 direct_declarator: direct_declarator SQ_BRACKET_L type_qualifier_list assignment_expression • SQ_BRACKET_R

    SQ_BRACKET_R  shift, and go to state 232


State 182

   19 postfix_expression: LP type_name • RP CURLY_BRACKET_L initializer_list CURLY_BRACKET_R
   20                   | LP type_name • RP CURLY_BRACKET_L initializer_list COMMA CURLY_BRACKET_R
   30 unary_expression: SIZEOF LP type_name • RP

    RP  shift, and go to state 233


State 183

   11 primary_expression: LP expression RP •

    $default  reduce using rule 11 (primary_expression)


State 184

   83 expression: expression COMMA • assignment_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 234


State 185

  117 specifier_qualifier_list_opt: specifier_qualifier_list •

    $default  reduce using rule 117 (specifier_qualifier_list_opt)


State 186

  114 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt •

    $default  reduce using rule 114 (specifier_qualifier_list)


State 187

  115 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt •

    $default  reduce using rule 115 (specifier_qualifier_list)


State 188

   19 postfix_expression: LP type_name RP • CURLY_BRACKET_L initializer_list CURLY_BRACKET_R
   20                   | LP type_name RP • CURLY_BRACKET_L initializer_list COMMA CURLY_BRACKET_R
   38 cast_expression: LP type_name RP • cast_expression

    SIZEOF           shift, and go to state 65
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 235
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    IDENTIFIER       shift, and go to state 76
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression  go to state 81
    postfix_expression  go to state 82
    unary_expression    go to state 145
    unary_operator      go to state 84
    cast_expression     go to state 236


State 189

   84 constant_expression: conditional_expression •

    $default  reduce using rule 84 (constant_expression)


State 190

  162 designator: SQ_BRACKET_L constant_expression • SQ_BRACKET_R

    SQ_BRACKET_R  shift, and go to state 237


State 191

  163 designator: PERIOD IDENTIFIER •

    $default  reduce using rule 163 (designator)


State 192

  153 initializer: CURLY_BRACKET_L initializer_list CURLY_BRACKET_R •

    $default  reduce using rule 153 (initializer)


State 193

  154 initializer: CURLY_BRACKET_L initializer_list COMMA • CURLY_BRACKET_R
  156 initializer_list: initializer_list COMMA • designation_opt initializer

    SQ_BRACKET_L     shift, and go to state 117
    CURLY_BRACKET_R  shift, and go to state 238
    PERIOD           shift, and go to state 118

    $default  reduce using rule 158 (designation_opt)

    designation      go to state 120
    designation_opt  go to state 239
    designator_list  go to state 122
    designator       go to state 123


State 194

  155 initializer_list: designation_opt initializer •

    $default  reduce using rule 155 (initializer_list)


State 195

  157 designation: designator_list ASSIGN •

    $default  reduce using rule 157 (designation)


State 196

  161 designator_list: designator_list designator •

    $default  reduce using rule 161 (designator_list)


State 197

   19 postfix_expression: LP type_name • RP CURLY_BRACKET_L initializer_list CURLY_BRACKET_R
   20                   | LP type_name • RP CURLY_BRACKET_L initializer_list COMMA CURLY_BRACKET_R

    RP  shift, and go to state 240


State 198

   14 postfix_expression: postfix_expression LP argument_expression_list_opt • RP

    RP  shift, and go to state 241


State 199

   21 argument_expression_list_opt: argument_expression_list •
   24 argument_expression_list: argument_expression_list • COMMA assignment_expression

    COMMA  shift, and go to state 242

    $default  reduce using rule 21 (argument_expression_list_opt)


State 200

   23 argument_expression_list: assignment_expression •

    $default  reduce using rule 23 (argument_expression_list)


State 201

   13 postfix_expression: postfix_expression SQ_BRACKET_L expression • SQ_BRACKET_R
   83 expression: expression • COMMA assignment_expression

    SQ_BRACKET_R  shift, and go to state 243
    COMMA         shift, and go to state 184


State 202

   15 postfix_expression: postfix_expression PERIOD IDENTIFIER •

    $default  reduce using rule 15 (postfix_expression)


State 203

   16 postfix_expression: postfix_expression ARROW IDENTIFIER •

    $default  reduce using rule 16 (postfix_expression)


State 204

   70 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 70 (assignment_expression)


State 205

   40 multiplicative_expression: multiplicative_expression ASTERISK cast_expression •

    $default  reduce using rule 40 (multiplicative_expression)


State 206

   41 multiplicative_expression: multiplicative_expression SLASH cast_expression •

    $default  reduce using rule 41 (multiplicative_expression)


State 207

   42 multiplicative_expression: multiplicative_expression PERCENT cast_expression •

    $default  reduce using rule 42 (multiplicative_expression)


State 208

   40 multiplicative_expression: multiplicative_expression • ASTERISK cast_expression
   41                          | multiplicative_expression • SLASH cast_expression
   42                          | multiplicative_expression • PERCENT cast_expression
   44 additive_expression: additive_expression PLUS multiplicative_expression •

    ASTERISK  shift, and go to state 147
    SLASH     shift, and go to state 148
    PERCENT   shift, and go to state 149

    $default  reduce using rule 44 (additive_expression)


State 209

   40 multiplicative_expression: multiplicative_expression • ASTERISK cast_expression
   41                          | multiplicative_expression • SLASH cast_expression
   42                          | multiplicative_expression • PERCENT cast_expression
   45 additive_expression: additive_expression MINUS multiplicative_expression •

    ASTERISK  shift, and go to state 147
    SLASH     shift, and go to state 148
    PERCENT   shift, and go to state 149

    $default  reduce using rule 45 (additive_expression)


State 210

   44 additive_expression: additive_expression • PLUS multiplicative_expression
   45                    | additive_expression • MINUS multiplicative_expression
   47 shift_expression: shift_expression LEFT_SHIFT additive_expression •

    PLUS   shift, and go to state 150
    MINUS  shift, and go to state 151

    $default  reduce using rule 47 (shift_expression)


State 211

   44 additive_expression: additive_expression • PLUS multiplicative_expression
   45                    | additive_expression • MINUS multiplicative_expression
   48 shift_expression: shift_expression RIGHT_SHIFT additive_expression •

    PLUS   shift, and go to state 150
    MINUS  shift, and go to state 151

    $default  reduce using rule 48 (shift_expression)


State 212

   47 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   48                 | shift_expression • RIGHT_SHIFT additive_expression
   50 relational_expression: relational_expression LESS_THAN shift_expression •

    LEFT_SHIFT   shift, and go to state 152
    RIGHT_SHIFT  shift, and go to state 153

    $default  reduce using rule 50 (relational_expression)


State 213

   47 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   48                 | shift_expression • RIGHT_SHIFT additive_expression
   51 relational_expression: relational_expression GREATER_THAN shift_expression •

    LEFT_SHIFT   shift, and go to state 152
    RIGHT_SHIFT  shift, and go to state 153

    $default  reduce using rule 51 (relational_expression)


State 214

   47 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   48                 | shift_expression • RIGHT_SHIFT additive_expression
   52 relational_expression: relational_expression LESS_THAN_EQUAL shift_expression •

    LEFT_SHIFT   shift, and go to state 152
    RIGHT_SHIFT  shift, and go to state 153

    $default  reduce using rule 52 (relational_expression)


State 215

   47 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   48                 | shift_expression • RIGHT_SHIFT additive_expression
   53 relational_expression: relational_expression GREATER_THAN_EQUAL shift_expression •

    LEFT_SHIFT   shift, and go to state 152
    RIGHT_SHIFT  shift, and go to state 153

    $default  reduce using rule 53 (relational_expression)


State 216

   50 relational_expression: relational_expression • LESS_THAN shift_expression
   51                      | relational_expression • GREATER_THAN shift_expression
   52                      | relational_expression • LESS_THAN_EQUAL shift_expression
   53                      | relational_expression • GREATER_THAN_EQUAL shift_expression
   55 equality_expression: equality_expression EQUAL relational_expression •

    LESS_THAN           shift, and go to state 154
    GREATER_THAN        shift, and go to state 155
    LESS_THAN_EQUAL     shift, and go to state 156
    GREATER_THAN_EQUAL  shift, and go to state 157

    $default  reduce using rule 55 (equality_expression)


State 217

   50 relational_expression: relational_expression • LESS_THAN shift_expression
   51                      | relational_expression • GREATER_THAN shift_expression
   52                      | relational_expression • LESS_THAN_EQUAL shift_expression
   53                      | relational_expression • GREATER_THAN_EQUAL shift_expression
   56 equality_expression: equality_expression NOT_EQUAL relational_expression •

    LESS_THAN           shift, and go to state 154
    GREATER_THAN        shift, and go to state 155
    LESS_THAN_EQUAL     shift, and go to state 156
    GREATER_THAN_EQUAL  shift, and go to state 157

    $default  reduce using rule 56 (equality_expression)


State 218

   55 equality_expression: equality_expression • EQUAL relational_expression
   56                    | equality_expression • NOT_EQUAL relational_expression
   58 and_expression: and_expression AMPERSAND equality_expression •

    EQUAL      shift, and go to state 158
    NOT_EQUAL  shift, and go to state 159

    $default  reduce using rule 58 (and_expression)


State 219

   58 and_expression: and_expression • AMPERSAND equality_expression
   60 exclusive_or_expression: exclusive_or_expression CARET and_expression •

    AMPERSAND  shift, and go to state 160

    $default  reduce using rule 60 (exclusive_or_expression)


State 220

   60 exclusive_or_expression: exclusive_or_expression • CARET and_expression
   62 inclusive_or_expression: inclusive_or_expression PIPE exclusive_or_expression •

    CARET  shift, and go to state 161

    $default  reduce using rule 62 (inclusive_or_expression)


State 221

   64 logical_and_expression: logical_and_expression LOGICAL_AND M • inclusive_or_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 244


State 222

   66 logical_or_expression: logical_or_expression LOGICAL_OR M • logical_and_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 245


State 223

   68 conditional_expression: logical_or_expression N QUESTION • M expression N COLON M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 246


State 224

  173 compound_statement: CURLY_BRACKET_L X • blocktable block_item_list_opt CURLY_BRACKET_R

    $default  reduce using rule 4 (blocktable)

    blocktable  go to state 247


State 225

  147 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 147 (parameter_declaration)


State 226

  134 direct_declarator: direct_declarator LP changetable parameter_type_list RP •

    $default  reduce using rule 134 (direct_declarator)


State 227

  144 parameter_type_list: parameter_list COMMA • ELLIPSIS
  146 parameter_list: parameter_list COMMA • parameter_declaration

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20
    ELLIPSIS   shift, and go to state 248

    declaration_specifiers   go to state 169
    storage_class_specifier  go to state 23
    type_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    parameter_declaration    go to state 249


State 228

  150 identifier_list: identifier_list COMMA IDENTIFIER •

    $default  reduce using rule 150 (identifier_list)


State 229

  131 direct_declarator: direct_declarator SQ_BRACKET_L STATIC assignment_expression SQ_BRACKET_R •

    $default  reduce using rule 131 (direct_declarator)


State 230

  130 direct_declarator: direct_declarator SQ_BRACKET_L STATIC type_qualifier_list assignment_expression • SQ_BRACKET_R

    SQ_BRACKET_R  shift, and go to state 250


State 231

  132 direct_declarator: direct_declarator SQ_BRACKET_L type_qualifier_list ASTERISK SQ_BRACKET_R •

    $default  reduce using rule 132 (direct_declarator)


State 232

  126 direct_declarator: direct_declarator SQ_BRACKET_L type_qualifier_list assignment_expression SQ_BRACKET_R •

    $default  reduce using rule 126 (direct_declarator)


State 233

   19 postfix_expression: LP type_name RP • CURLY_BRACKET_L initializer_list CURLY_BRACKET_R
   20                   | LP type_name RP • CURLY_BRACKET_L initializer_list COMMA CURLY_BRACKET_R
   30 unary_expression: SIZEOF LP type_name RP •

    CURLY_BRACKET_L  shift, and go to state 235

    $default  reduce using rule 30 (unary_expression)


State 234

   83 expression: expression COMMA assignment_expression •

    $default  reduce using rule 83 (expression)


State 235

   19 postfix_expression: LP type_name RP CURLY_BRACKET_L • initializer_list CURLY_BRACKET_R
   20                   | LP type_name RP CURLY_BRACKET_L • initializer_list COMMA CURLY_BRACKET_R

    SQ_BRACKET_L  shift, and go to state 117
    PERIOD        shift, and go to state 118

    $default  reduce using rule 158 (designation_opt)

    initializer_list  go to state 251
    designation       go to state 120
    designation_opt   go to state 121
    designator_list   go to state 122
    designator        go to state 123


State 236

   38 cast_expression: LP type_name RP cast_expression •

    $default  reduce using rule 38 (cast_expression)


State 237

  162 designator: SQ_BRACKET_L constant_expression SQ_BRACKET_R •

    $default  reduce using rule 162 (designator)


State 238

  154 initializer: CURLY_BRACKET_L initializer_list COMMA CURLY_BRACKET_R •

    $default  reduce using rule 154 (initializer)


State 239

  156 initializer_list: initializer_list COMMA designation_opt • initializer

    SIZEOF           shift, and go to state 65
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 67
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    IDENTIFIER       shift, and go to state 76
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 97
    initializer                go to state 252


State 240

   19 postfix_expression: LP type_name RP • CURLY_BRACKET_L initializer_list CURLY_BRACKET_R
   20                   | LP type_name RP • CURLY_BRACKET_L initializer_list COMMA CURLY_BRACKET_R

    CURLY_BRACKET_L  shift, and go to state 235


State 241

   14 postfix_expression: postfix_expression LP argument_expression_list_opt RP •

    $default  reduce using rule 14 (postfix_expression)


State 242

   24 argument_expression_list: argument_expression_list COMMA • assignment_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 253


State 243

   13 postfix_expression: postfix_expression SQ_BRACKET_L expression SQ_BRACKET_R •

    $default  reduce using rule 13 (postfix_expression)


State 244

   62 inclusive_or_expression: inclusive_or_expression • PIPE exclusive_or_expression
   64 logical_and_expression: logical_and_expression LOGICAL_AND M inclusive_or_expression •

    PIPE  shift, and go to state 162

    $default  reduce using rule 64 (logical_and_expression)


State 245

   64 logical_and_expression: logical_and_expression • LOGICAL_AND M inclusive_or_expression
   66 logical_or_expression: logical_or_expression LOGICAL_OR M logical_and_expression •

    LOGICAL_AND  shift, and go to state 163

    $default  reduce using rule 66 (logical_or_expression)


State 246

   68 conditional_expression: logical_or_expression N QUESTION M • expression N COLON M conditional_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 254


State 247

  173 compound_statement: CURLY_BRACKET_L X blocktable • block_item_list_opt CURLY_BRACKET_R

    AUTO             shift, and go to state 1
    RESTRICT         shift, and go to state 2
    UNSIGNED         shift, and go to state 3
    BREAK            shift, and go to state 255
    EXTERN           shift, and go to state 4
    RETURN           shift, and go to state 256
    VOID             shift, and go to state 5
    CASE             shift, and go to state 257
    FLOAT            shift, and go to state 6
    SHORT            shift, and go to state 7
    VOLATILE         shift, and go to state 8
    CHAR             shift, and go to state 9
    FOR              shift, and go to state 258
    SIGNED           shift, and go to state 10
    WHILE            shift, and go to state 259
    CONST            shift, and go to state 11
    GOTO             shift, and go to state 260
    SIZEOF           shift, and go to state 65
    BOOL             shift, and go to state 12
    CONTINUE         shift, and go to state 261
    IF               shift, and go to state 262
    STATIC           shift, and go to state 13
    COMPLEX          shift, and go to state 14
    DEFAULT          shift, and go to state 263
    INLINE           shift, and go to state 15
    IMAGINARY        shift, and go to state 16
    DO               shift, and go to state 264
    INT              shift, and go to state 17
    SWITCH           shift, and go to state 265
    DOUBLE           shift, and go to state 18
    LONG             shift, and go to state 19
    REGISTER         shift, and go to state 20
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 166
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    SEMICOLON        shift, and go to state 266
    IDENTIFIER       shift, and go to state 267
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    $default  reduce using rule 176 (block_item_list_opt)

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    declaration                go to state 269
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 270
    labeled_statement          go to state 271
    compound_statement         go to state 272
    block_item_list            go to state 273
    block_item_list_opt        go to state 274
    block_item                 go to state 275
    expression_statement       go to state 276
    selection_statement        go to state 277
    iteration_statement        go to state 278
    jump_statement             go to state 279


State 248

  144 parameter_type_list: parameter_list COMMA ELLIPSIS •

    $default  reduce using rule 144 (parameter_type_list)


State 249

  146 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 146 (parameter_list)


State 250

  130 direct_declarator: direct_declarator SQ_BRACKET_L STATIC type_qualifier_list assignment_expression SQ_BRACKET_R •

    $default  reduce using rule 130 (direct_declarator)


State 251

   19 postfix_expression: LP type_name RP CURLY_BRACKET_L initializer_list • CURLY_BRACKET_R
   20                   | LP type_name RP CURLY_BRACKET_L initializer_list • COMMA CURLY_BRACKET_R
  156 initializer_list: initializer_list • COMMA designation_opt initializer

    CURLY_BRACKET_R  shift, and go to state 280
    COMMA            shift, and go to state 281


State 252

  156 initializer_list: initializer_list COMMA designation_opt initializer •

    $default  reduce using rule 156 (initializer_list)


State 253

   24 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 24 (argument_expression_list)


State 254

   68 conditional_expression: logical_or_expression N QUESTION M expression • N COLON M conditional_expression
   83 expression: expression • COMMA assignment_expression

    COMMA  shift, and go to state 184

    $default  reduce using rule 2 (N)

    N  go to state 282


State 255

  192 jump_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 283


State 256

  193 jump_statement: RETURN • expression SEMICOLON
  194               | RETURN • SEMICOLON

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    SEMICOLON       shift, and go to state 284
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 285


State 257

  171 labeled_statement: CASE • constant_expression COLON statement

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 189
    constant_expression        go to state 286


State 258

  187 iteration_statement: FOR • LP X blocktable expression_statement M expression_statement M expression N RP M statement
  188                    | FOR • LP X blocktable declaration M expression_statement M expression N RP M statement
  189                    | FOR • LP X blocktable declaration M expression_statement M expression_statement M expression N RP M statement

    LP  shift, and go to state 287


State 259

  185 iteration_statement: WHILE • LP X blocktable M expression RP M statement

    LP  shift, and go to state 288


State 260

  190 jump_statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 289


State 261

  191 jump_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 290


State 262

  182 selection_statement: IF • LP expression RP M statement N
  183                    | IF • LP expression RP M statement N ELSE M statement

    LP  shift, and go to state 291


State 263

  172 labeled_statement: DEFAULT • COLON statement

    COLON  shift, and go to state 292


State 264

  186 iteration_statement: DO • M statement M WHILE LP expression RP SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 293


State 265

  184 selection_statement: SWITCH • LP expression RP statement

    LP  shift, and go to state 294


State 266

  181 expression_statement: SEMICOLON •

    $default  reduce using rule 181 (expression_statement)


State 267

    6 primary_expression: IDENTIFIER •
  170 labeled_statement: IDENTIFIER • COLON M statement

    COLON  shift, and go to state 295

    $default  reduce using rule 6 (primary_expression)


State 268

   83 expression: expression • COMMA assignment_expression
  180 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 296
    COMMA      shift, and go to state 184


State 269

  178 block_item: declaration •

    $default  reduce using rule 178 (block_item)


State 270

  179 block_item: statement •

    $default  reduce using rule 179 (block_item)


State 271

  164 statement: labeled_statement •

    $default  reduce using rule 164 (statement)


State 272

  165 statement: compound_statement •

    $default  reduce using rule 165 (statement)


State 273

  175 block_item_list: block_item_list • M block_item
  177 block_item_list_opt: block_item_list •

    CURLY_BRACKET_R  reduce using rule 177 (block_item_list_opt)
    $default         reduce using rule 1 (M)

    M  go to state 297


State 274

  173 compound_statement: CURLY_BRACKET_L X blocktable block_item_list_opt • CURLY_BRACKET_R

    CURLY_BRACKET_R  shift, and go to state 298


State 275

  174 block_item_list: block_item •

    $default  reduce using rule 174 (block_item_list)


State 276

  166 statement: expression_statement •

    $default  reduce using rule 166 (statement)


State 277

  167 statement: selection_statement •

    $default  reduce using rule 167 (statement)


State 278

  168 statement: iteration_statement •

    $default  reduce using rule 168 (statement)


State 279

  169 statement: jump_statement •

    $default  reduce using rule 169 (statement)


State 280

   19 postfix_expression: LP type_name RP CURLY_BRACKET_L initializer_list CURLY_BRACKET_R •

    $default  reduce using rule 19 (postfix_expression)


State 281

   20 postfix_expression: LP type_name RP CURLY_BRACKET_L initializer_list COMMA • CURLY_BRACKET_R
  156 initializer_list: initializer_list COMMA • designation_opt initializer

    SQ_BRACKET_L     shift, and go to state 117
    CURLY_BRACKET_R  shift, and go to state 299
    PERIOD           shift, and go to state 118

    $default  reduce using rule 158 (designation_opt)

    designation      go to state 120
    designation_opt  go to state 239
    designator_list  go to state 122
    designator       go to state 123


State 282

   68 conditional_expression: logical_or_expression N QUESTION M expression N • COLON M conditional_expression

    COLON  shift, and go to state 300


State 283

  192 jump_statement: BREAK SEMICOLON •

    $default  reduce using rule 192 (jump_statement)


State 284

  194 jump_statement: RETURN SEMICOLON •

    $default  reduce using rule 194 (jump_statement)


State 285

   83 expression: expression • COMMA assignment_expression
  193 jump_statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 301
    COMMA      shift, and go to state 184


State 286

  171 labeled_statement: CASE constant_expression • COLON statement

    COLON  shift, and go to state 302


State 287

  187 iteration_statement: FOR LP • X blocktable expression_statement M expression_statement M expression N RP M statement
  188                    | FOR LP • X blocktable declaration M expression_statement M expression N RP M statement
  189                    | FOR LP • X blocktable declaration M expression_statement M expression_statement M expression N RP M statement

    $default  reduce using rule 3 (X)

    X  go to state 303


State 288

  185 iteration_statement: WHILE LP • X blocktable M expression RP M statement

    $default  reduce using rule 3 (X)

    X  go to state 304


State 289

  190 jump_statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 305


State 290

  191 jump_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 191 (jump_statement)


State 291

  182 selection_statement: IF LP • expression RP M statement N
  183                    | IF LP • expression RP M statement N ELSE M statement

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 306


State 292

  172 labeled_statement: DEFAULT COLON • statement

    BREAK            shift, and go to state 255
    RETURN           shift, and go to state 256
    CASE             shift, and go to state 257
    FOR              shift, and go to state 258
    WHILE            shift, and go to state 259
    GOTO             shift, and go to state 260
    SIZEOF           shift, and go to state 65
    CONTINUE         shift, and go to state 261
    IF               shift, and go to state 262
    DEFAULT          shift, and go to state 263
    DO               shift, and go to state 264
    SWITCH           shift, and go to state 265
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 166
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    SEMICOLON        shift, and go to state 266
    IDENTIFIER       shift, and go to state 267
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    statement                  go to state 307
    labeled_statement          go to state 271
    compound_statement         go to state 272
    expression_statement       go to state 276
    selection_statement        go to state 277
    iteration_statement        go to state 278
    jump_statement             go to state 279


State 293

  186 iteration_statement: DO M • statement M WHILE LP expression RP SEMICOLON

    BREAK            shift, and go to state 255
    RETURN           shift, and go to state 256
    CASE             shift, and go to state 257
    FOR              shift, and go to state 258
    WHILE            shift, and go to state 259
    GOTO             shift, and go to state 260
    SIZEOF           shift, and go to state 65
    CONTINUE         shift, and go to state 261
    IF               shift, and go to state 262
    DEFAULT          shift, and go to state 263
    DO               shift, and go to state 264
    SWITCH           shift, and go to state 265
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 166
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    SEMICOLON        shift, and go to state 266
    IDENTIFIER       shift, and go to state 267
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    statement                  go to state 308
    labeled_statement          go to state 271
    compound_statement         go to state 272
    expression_statement       go to state 276
    selection_statement        go to state 277
    iteration_statement        go to state 278
    jump_statement             go to state 279


State 294

  184 selection_statement: SWITCH LP • expression RP statement

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 309


State 295

  170 labeled_statement: IDENTIFIER COLON • M statement

    $default  reduce using rule 1 (M)

    M  go to state 310


State 296

  180 expression_statement: expression SEMICOLON •

    $default  reduce using rule 180 (expression_statement)


State 297

  175 block_item_list: block_item_list M • block_item

    AUTO             shift, and go to state 1
    RESTRICT         shift, and go to state 2
    UNSIGNED         shift, and go to state 3
    BREAK            shift, and go to state 255
    EXTERN           shift, and go to state 4
    RETURN           shift, and go to state 256
    VOID             shift, and go to state 5
    CASE             shift, and go to state 257
    FLOAT            shift, and go to state 6
    SHORT            shift, and go to state 7
    VOLATILE         shift, and go to state 8
    CHAR             shift, and go to state 9
    FOR              shift, and go to state 258
    SIGNED           shift, and go to state 10
    WHILE            shift, and go to state 259
    CONST            shift, and go to state 11
    GOTO             shift, and go to state 260
    SIZEOF           shift, and go to state 65
    BOOL             shift, and go to state 12
    CONTINUE         shift, and go to state 261
    IF               shift, and go to state 262
    STATIC           shift, and go to state 13
    COMPLEX          shift, and go to state 14
    DEFAULT          shift, and go to state 263
    INLINE           shift, and go to state 15
    IMAGINARY        shift, and go to state 16
    DO               shift, and go to state 264
    INT              shift, and go to state 17
    SWITCH           shift, and go to state 265
    DOUBLE           shift, and go to state 18
    LONG             shift, and go to state 19
    REGISTER         shift, and go to state 20
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 166
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    SEMICOLON        shift, and go to state 266
    IDENTIFIER       shift, and go to state 267
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    declaration                go to state 269
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 270
    labeled_statement          go to state 271
    compound_statement         go to state 272
    block_item                 go to state 311
    expression_statement       go to state 276
    selection_statement        go to state 277
    iteration_statement        go to state 278
    jump_statement             go to state 279


State 298

  173 compound_statement: CURLY_BRACKET_L X blocktable block_item_list_opt CURLY_BRACKET_R •

    $default  reduce using rule 173 (compound_statement)


State 299

   20 postfix_expression: LP type_name RP CURLY_BRACKET_L initializer_list COMMA CURLY_BRACKET_R •

    $default  reduce using rule 20 (postfix_expression)


State 300

   68 conditional_expression: logical_or_expression N QUESTION M expression N COLON • M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 312


State 301

  193 jump_statement: RETURN expression SEMICOLON •

    $default  reduce using rule 193 (jump_statement)


State 302

  171 labeled_statement: CASE constant_expression COLON • statement

    BREAK            shift, and go to state 255
    RETURN           shift, and go to state 256
    CASE             shift, and go to state 257
    FOR              shift, and go to state 258
    WHILE            shift, and go to state 259
    GOTO             shift, and go to state 260
    SIZEOF           shift, and go to state 65
    CONTINUE         shift, and go to state 261
    IF               shift, and go to state 262
    DEFAULT          shift, and go to state 263
    DO               shift, and go to state 264
    SWITCH           shift, and go to state 265
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 166
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    SEMICOLON        shift, and go to state 266
    IDENTIFIER       shift, and go to state 267
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    statement                  go to state 313
    labeled_statement          go to state 271
    compound_statement         go to state 272
    expression_statement       go to state 276
    selection_statement        go to state 277
    iteration_statement        go to state 278
    jump_statement             go to state 279


State 303

  187 iteration_statement: FOR LP X • blocktable expression_statement M expression_statement M expression N RP M statement
  188                    | FOR LP X • blocktable declaration M expression_statement M expression N RP M statement
  189                    | FOR LP X • blocktable declaration M expression_statement M expression_statement M expression N RP M statement

    $default  reduce using rule 4 (blocktable)

    blocktable  go to state 314


State 304

  185 iteration_statement: WHILE LP X • blocktable M expression RP M statement

    $default  reduce using rule 4 (blocktable)

    blocktable  go to state 315


State 305

  190 jump_statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 190 (jump_statement)


State 306

   83 expression: expression • COMMA assignment_expression
  182 selection_statement: IF LP expression • RP M statement N
  183                    | IF LP expression • RP M statement N ELSE M statement

    RP     shift, and go to state 316
    COMMA  shift, and go to state 184


State 307

  172 labeled_statement: DEFAULT COLON statement •

    $default  reduce using rule 172 (labeled_statement)


State 308

  186 iteration_statement: DO M statement • M WHILE LP expression RP SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 317


State 309

   83 expression: expression • COMMA assignment_expression
  184 selection_statement: SWITCH LP expression • RP statement

    RP     shift, and go to state 318
    COMMA  shift, and go to state 184


State 310

  170 labeled_statement: IDENTIFIER COLON M • statement

    BREAK            shift, and go to state 255
    RETURN           shift, and go to state 256
    CASE             shift, and go to state 257
    FOR              shift, and go to state 258
    WHILE            shift, and go to state 259
    GOTO             shift, and go to state 260
    SIZEOF           shift, and go to state 65
    CONTINUE         shift, and go to state 261
    IF               shift, and go to state 262
    DEFAULT          shift, and go to state 263
    DO               shift, and go to state 264
    SWITCH           shift, and go to state 265
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 166
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    SEMICOLON        shift, and go to state 266
    IDENTIFIER       shift, and go to state 267
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    statement                  go to state 319
    labeled_statement          go to state 271
    compound_statement         go to state 272
    expression_statement       go to state 276
    selection_statement        go to state 277
    iteration_statement        go to state 278
    jump_statement             go to state 279


State 311

  175 block_item_list: block_item_list M block_item •

    $default  reduce using rule 175 (block_item_list)


State 312

   68 conditional_expression: logical_or_expression N QUESTION M expression N COLON M • conditional_expression

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 145
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 320


State 313

  171 labeled_statement: CASE constant_expression COLON statement •

    $default  reduce using rule 171 (labeled_statement)


State 314

  187 iteration_statement: FOR LP X blocktable • expression_statement M expression_statement M expression N RP M statement
  188                    | FOR LP X blocktable • declaration M expression_statement M expression N RP M statement
  189                    | FOR LP X blocktable • declaration M expression_statement M expression_statement M expression N RP M statement

    AUTO            shift, and go to state 1
    RESTRICT        shift, and go to state 2
    UNSIGNED        shift, and go to state 3
    EXTERN          shift, and go to state 4
    VOID            shift, and go to state 5
    FLOAT           shift, and go to state 6
    SHORT           shift, and go to state 7
    VOLATILE        shift, and go to state 8
    CHAR            shift, and go to state 9
    SIGNED          shift, and go to state 10
    CONST           shift, and go to state 11
    SIZEOF          shift, and go to state 65
    BOOL            shift, and go to state 12
    STATIC          shift, and go to state 13
    COMPLEX         shift, and go to state 14
    INLINE          shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    INT             shift, and go to state 17
    DOUBLE          shift, and go to state 18
    LONG            shift, and go to state 19
    REGISTER        shift, and go to state 20
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    SEMICOLON       shift, and go to state 266
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    declaration                go to state 321
    declaration_specifiers     go to state 54
    storage_class_specifier    go to state 23
    type_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    expression_statement       go to state 322


State 315

  185 iteration_statement: WHILE LP X blocktable • M expression RP M statement

    $default  reduce using rule 1 (M)

    M  go to state 323


State 316

  182 selection_statement: IF LP expression RP • M statement N
  183                    | IF LP expression RP • M statement N ELSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 324


State 317

  186 iteration_statement: DO M statement M • WHILE LP expression RP SEMICOLON

    WHILE  shift, and go to state 325


State 318

  184 selection_statement: SWITCH LP expression RP • statement

    BREAK            shift, and go to state 255
    RETURN           shift, and go to state 256
    CASE             shift, and go to state 257
    FOR              shift, and go to state 258
    WHILE            shift, and go to state 259
    GOTO             shift, and go to state 260
    SIZEOF           shift, and go to state 65
    CONTINUE         shift, and go to state 261
    IF               shift, and go to state 262
    DEFAULT          shift, and go to state 263
    DO               shift, and go to state 264
    SWITCH           shift, and go to state 265
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 166
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    SEMICOLON        shift, and go to state 266
    IDENTIFIER       shift, and go to state 267
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    statement                  go to state 326
    labeled_statement          go to state 271
    compound_statement         go to state 272
    expression_statement       go to state 276
    selection_statement        go to state 277
    iteration_statement        go to state 278
    jump_statement             go to state 279


State 319

  170 labeled_statement: IDENTIFIER COLON M statement •

    $default  reduce using rule 170 (labeled_statement)


State 320

   68 conditional_expression: logical_or_expression N QUESTION M expression N COLON M conditional_expression •

    $default  reduce using rule 68 (conditional_expression)


State 321

  188 iteration_statement: FOR LP X blocktable declaration • M expression_statement M expression N RP M statement
  189                    | FOR LP X blocktable declaration • M expression_statement M expression_statement M expression N RP M statement

    $default  reduce using rule 1 (M)

    M  go to state 327


State 322

  187 iteration_statement: FOR LP X blocktable expression_statement • M expression_statement M expression N RP M statement

    $default  reduce using rule 1 (M)

    M  go to state 328


State 323

  185 iteration_statement: WHILE LP X blocktable M • expression RP M statement

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 329


State 324

  182 selection_statement: IF LP expression RP M • statement N
  183                    | IF LP expression RP M • statement N ELSE M statement

    BREAK            shift, and go to state 255
    RETURN           shift, and go to state 256
    CASE             shift, and go to state 257
    FOR              shift, and go to state 258
    WHILE            shift, and go to state 259
    GOTO             shift, and go to state 260
    SIZEOF           shift, and go to state 65
    CONTINUE         shift, and go to state 261
    IF               shift, and go to state 262
    DEFAULT          shift, and go to state 263
    DO               shift, and go to state 264
    SWITCH           shift, and go to state 265
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 166
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    SEMICOLON        shift, and go to state 266
    IDENTIFIER       shift, and go to state 267
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    statement                  go to state 330
    labeled_statement          go to state 271
    compound_statement         go to state 272
    expression_statement       go to state 276
    selection_statement        go to state 277
    iteration_statement        go to state 278
    jump_statement             go to state 279


State 325

  186 iteration_statement: DO M statement M WHILE • LP expression RP SEMICOLON

    LP  shift, and go to state 331


State 326

  184 selection_statement: SWITCH LP expression RP statement •

    $default  reduce using rule 184 (selection_statement)


State 327

  188 iteration_statement: FOR LP X blocktable declaration M • expression_statement M expression N RP M statement
  189                    | FOR LP X blocktable declaration M • expression_statement M expression_statement M expression N RP M statement

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    SEMICOLON       shift, and go to state 266
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    expression_statement       go to state 332


State 328

  187 iteration_statement: FOR LP X blocktable expression_statement M • expression_statement M expression N RP M statement

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    SEMICOLON       shift, and go to state 266
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    expression_statement       go to state 333


State 329

   83 expression: expression • COMMA assignment_expression
  185 iteration_statement: WHILE LP X blocktable M expression • RP M statement

    RP     shift, and go to state 334
    COMMA  shift, and go to state 184


State 330

  182 selection_statement: IF LP expression RP M statement • N
  183                    | IF LP expression RP M statement • N ELSE M statement

    $default  reduce using rule 2 (N)

    N  go to state 335


State 331

  186 iteration_statement: DO M statement M WHILE LP • expression RP SEMICOLON

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 336


State 332

  188 iteration_statement: FOR LP X blocktable declaration M expression_statement • M expression N RP M statement
  189                    | FOR LP X blocktable declaration M expression_statement • M expression_statement M expression N RP M statement

    $default  reduce using rule 1 (M)

    M  go to state 337


State 333

  187 iteration_statement: FOR LP X blocktable expression_statement M expression_statement • M expression N RP M statement

    $default  reduce using rule 1 (M)

    M  go to state 338


State 334

  185 iteration_statement: WHILE LP X blocktable M expression RP • M statement

    $default  reduce using rule 1 (M)

    M  go to state 339


State 335

  182 selection_statement: IF LP expression RP M statement N •
  183                    | IF LP expression RP M statement N • ELSE M statement

    ELSE  shift, and go to state 340

    $default  reduce using rule 182 (selection_statement)


State 336

   83 expression: expression • COMMA assignment_expression
  186 iteration_statement: DO M statement M WHILE LP expression • RP SEMICOLON

    RP     shift, and go to state 341
    COMMA  shift, and go to state 184


State 337

  188 iteration_statement: FOR LP X blocktable declaration M expression_statement M • expression N RP M statement
  189                    | FOR LP X blocktable declaration M expression_statement M • expression_statement M expression N RP M statement

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    SEMICOLON       shift, and go to state 266
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 342
    expression_statement       go to state 343


State 338

  187 iteration_statement: FOR LP X blocktable expression_statement M expression_statement M • expression N RP M statement

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 344


State 339

  185 iteration_statement: WHILE LP X blocktable M expression RP M • statement

    BREAK            shift, and go to state 255
    RETURN           shift, and go to state 256
    CASE             shift, and go to state 257
    FOR              shift, and go to state 258
    WHILE            shift, and go to state 259
    GOTO             shift, and go to state 260
    SIZEOF           shift, and go to state 65
    CONTINUE         shift, and go to state 261
    IF               shift, and go to state 262
    DEFAULT          shift, and go to state 263
    DO               shift, and go to state 264
    SWITCH           shift, and go to state 265
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 166
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    SEMICOLON        shift, and go to state 266
    IDENTIFIER       shift, and go to state 267
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    statement                  go to state 345
    labeled_statement          go to state 271
    compound_statement         go to state 272
    expression_statement       go to state 276
    selection_statement        go to state 277
    iteration_statement        go to state 278
    jump_statement             go to state 279


State 340

  183 selection_statement: IF LP expression RP M statement N ELSE • M statement

    $default  reduce using rule 1 (M)

    M  go to state 346


State 341

  186 iteration_statement: DO M statement M WHILE LP expression RP • SEMICOLON

    SEMICOLON  shift, and go to state 347


State 342

   83 expression: expression • COMMA assignment_expression
  180 expression_statement: expression • SEMICOLON
  188 iteration_statement: FOR LP X blocktable declaration M expression_statement M expression • N RP M statement

    SEMICOLON  shift, and go to state 296
    COMMA      shift, and go to state 184

    $default  reduce using rule 2 (N)

    N  go to state 348


State 343

  189 iteration_statement: FOR LP X blocktable declaration M expression_statement M expression_statement • M expression N RP M statement

    $default  reduce using rule 1 (M)

    M  go to state 349


State 344

   83 expression: expression • COMMA assignment_expression
  187 iteration_statement: FOR LP X blocktable expression_statement M expression_statement M expression • N RP M statement

    COMMA  shift, and go to state 184

    $default  reduce using rule 2 (N)

    N  go to state 350


State 345

  185 iteration_statement: WHILE LP X blocktable M expression RP M statement •

    $default  reduce using rule 185 (iteration_statement)


State 346

  183 selection_statement: IF LP expression RP M statement N ELSE M • statement

    BREAK            shift, and go to state 255
    RETURN           shift, and go to state 256
    CASE             shift, and go to state 257
    FOR              shift, and go to state 258
    WHILE            shift, and go to state 259
    GOTO             shift, and go to state 260
    SIZEOF           shift, and go to state 65
    CONTINUE         shift, and go to state 261
    IF               shift, and go to state 262
    DEFAULT          shift, and go to state 263
    DO               shift, and go to state 264
    SWITCH           shift, and go to state 265
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 166
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    SEMICOLON        shift, and go to state 266
    IDENTIFIER       shift, and go to state 267
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    statement                  go to state 351
    labeled_statement          go to state 271
    compound_statement         go to state 272
    expression_statement       go to state 276
    selection_statement        go to state 277
    iteration_statement        go to state 278
    jump_statement             go to state 279


State 347

  186 iteration_statement: DO M statement M WHILE LP expression RP SEMICOLON •

    $default  reduce using rule 186 (iteration_statement)


State 348

  188 iteration_statement: FOR LP X blocktable declaration M expression_statement M expression N • RP M statement

    RP  shift, and go to state 352


State 349

  189 iteration_statement: FOR LP X blocktable declaration M expression_statement M expression_statement M • expression N RP M statement

    SIZEOF          shift, and go to state 65
    LP              shift, and go to state 66
    INCREMENT       shift, and go to state 68
    DECREMENT       shift, and go to state 69
    AMPERSAND       shift, and go to state 70
    ASTERISK        shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    TILDE           shift, and go to state 74
    EXCLAMATION     shift, and go to state 75
    IDENTIFIER      shift, and go to state 76
    CONSTANT_INT    shift, and go to state 77
    LITERAL         shift, and go to state 78
    CONSTANT_FLOAT  shift, and go to state 79
    CONSTANT_CHAR   shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 353


State 350

  187 iteration_statement: FOR LP X blocktable expression_statement M expression_statement M expression N • RP M statement

    RP  shift, and go to state 354


State 351

  183 selection_statement: IF LP expression RP M statement N ELSE M statement •

    $default  reduce using rule 183 (selection_statement)


State 352

  188 iteration_statement: FOR LP X blocktable declaration M expression_statement M expression N RP • M statement

    $default  reduce using rule 1 (M)

    M  go to state 355


State 353

   83 expression: expression • COMMA assignment_expression
  189 iteration_statement: FOR LP X blocktable declaration M expression_statement M expression_statement M expression • N RP M statement

    COMMA  shift, and go to state 184

    $default  reduce using rule 2 (N)

    N  go to state 356


State 354

  187 iteration_statement: FOR LP X blocktable expression_statement M expression_statement M expression N RP • M statement

    $default  reduce using rule 1 (M)

    M  go to state 357


State 355

  188 iteration_statement: FOR LP X blocktable declaration M expression_statement M expression N RP M • statement

    BREAK            shift, and go to state 255
    RETURN           shift, and go to state 256
    CASE             shift, and go to state 257
    FOR              shift, and go to state 258
    WHILE            shift, and go to state 259
    GOTO             shift, and go to state 260
    SIZEOF           shift, and go to state 65
    CONTINUE         shift, and go to state 261
    IF               shift, and go to state 262
    DEFAULT          shift, and go to state 263
    DO               shift, and go to state 264
    SWITCH           shift, and go to state 265
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 166
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    SEMICOLON        shift, and go to state 266
    IDENTIFIER       shift, and go to state 267
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    statement                  go to state 358
    labeled_statement          go to state 271
    compound_statement         go to state 272
    expression_statement       go to state 276
    selection_statement        go to state 277
    iteration_statement        go to state 278
    jump_statement             go to state 279


State 356

  189 iteration_statement: FOR LP X blocktable declaration M expression_statement M expression_statement M expression N • RP M statement

    RP  shift, and go to state 359


State 357

  187 iteration_statement: FOR LP X blocktable expression_statement M expression_statement M expression N RP M • statement

    BREAK            shift, and go to state 255
    RETURN           shift, and go to state 256
    CASE             shift, and go to state 257
    FOR              shift, and go to state 258
    WHILE            shift, and go to state 259
    GOTO             shift, and go to state 260
    SIZEOF           shift, and go to state 65
    CONTINUE         shift, and go to state 261
    IF               shift, and go to state 262
    DEFAULT          shift, and go to state 263
    DO               shift, and go to state 264
    SWITCH           shift, and go to state 265
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 166
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    SEMICOLON        shift, and go to state 266
    IDENTIFIER       shift, and go to state 267
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    statement                  go to state 360
    labeled_statement          go to state 271
    compound_statement         go to state 272
    expression_statement       go to state 276
    selection_statement        go to state 277
    iteration_statement        go to state 278
    jump_statement             go to state 279


State 358

  188 iteration_statement: FOR LP X blocktable declaration M expression_statement M expression N RP M statement •

    $default  reduce using rule 188 (iteration_statement)


State 359

  189 iteration_statement: FOR LP X blocktable declaration M expression_statement M expression_statement M expression N RP • M statement

    $default  reduce using rule 1 (M)

    M  go to state 361


State 360

  187 iteration_statement: FOR LP X blocktable expression_statement M expression_statement M expression N RP M statement •

    $default  reduce using rule 187 (iteration_statement)


State 361

  189 iteration_statement: FOR LP X blocktable declaration M expression_statement M expression_statement M expression N RP M • statement

    BREAK            shift, and go to state 255
    RETURN           shift, and go to state 256
    CASE             shift, and go to state 257
    FOR              shift, and go to state 258
    WHILE            shift, and go to state 259
    GOTO             shift, and go to state 260
    SIZEOF           shift, and go to state 65
    CONTINUE         shift, and go to state 261
    IF               shift, and go to state 262
    DEFAULT          shift, and go to state 263
    DO               shift, and go to state 264
    SWITCH           shift, and go to state 265
    LP               shift, and go to state 66
    CURLY_BRACKET_L  shift, and go to state 166
    INCREMENT        shift, and go to state 68
    DECREMENT        shift, and go to state 69
    AMPERSAND        shift, and go to state 70
    ASTERISK         shift, and go to state 71
    PLUS             shift, and go to state 72
    MINUS            shift, and go to state 73
    TILDE            shift, and go to state 74
    EXCLAMATION      shift, and go to state 75
    SEMICOLON        shift, and go to state 266
    IDENTIFIER       shift, and go to state 267
    CONSTANT_INT     shift, and go to state 77
    LITERAL          shift, and go to state 78
    CONSTANT_FLOAT   shift, and go to state 79
    CONSTANT_CHAR    shift, and go to state 80

    primary_expression         go to state 81
    postfix_expression         go to state 82
    unary_expression           go to state 83
    unary_operator             go to state 84
    cast_expression            go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    conditional_expression     go to state 96
    assignment_expression      go to state 111
    expression                 go to state 268
    statement                  go to state 362
    labeled_statement          go to state 271
    compound_statement         go to state 272
    expression_statement       go to state 276
    selection_statement        go to state 277
    iteration_statement        go to state 278
    jump_statement             go to state 279


State 362

  189 iteration_statement: FOR LP X blocktable declaration M expression_statement M expression_statement M expression N RP M statement •

    $default  reduce using rule 189 (iteration_statement)
